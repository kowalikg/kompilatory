Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instruction -> return_instruction
Rule 5     instruction -> break_instruction
Rule 6     instruction -> continue_instruction
Rule 7     instruction -> print_instruction
Rule 8     instruction -> while_instruction
Rule 9     instruction -> for_instruction
Rule 10    instruction -> if_instruction
Rule 11    instruction -> assignment_instruction
Rule 12    instruction -> compound_assignment_instruction
Rule 13    instruction -> compound_instruction
Rule 14    return_instruction -> RETURN expression ;
Rule 15    break_instruction -> BREAK ;
Rule 16    continue_instruction -> CONTINUE ;
Rule 17    print_instruction -> PRINT expression_list ;
Rule 18    print_instruction -> PRINT " expression_list " ;
Rule 19    assignment_instruction -> variable_expression = expression ;
Rule 20    assignment_instruction -> variable_expression = [ expression_lists ] ;
Rule 21    expression -> expression + expression
Rule 22    expression -> expression - expression
Rule 23    expression -> expression * expression
Rule 24    expression -> expression / expression
Rule 25    expression -> expression EQ expression
Rule 26    expression -> expression NOTEQ expression
Rule 27    expression -> expression LESS expression
Rule 28    expression -> expression GREATER expression
Rule 29    expression -> expression LESSEQ expression
Rule 30    expression -> expression GREATEREQ expression
Rule 31    expression -> expression DOTADD expression
Rule 32    expression -> expression DOTSUB expression
Rule 33    expression -> expression DOTMUL expression
Rule 34    expression -> expression DOTDIV expression
Rule 35    expression -> - expression
Rule 36    expression -> expression '
Rule 37    expression -> ZEROS ( expression )
Rule 38    expression -> ONES ( expression )
Rule 39    expression -> EYE ( expression )
Rule 40    compound_assignment_instruction -> variable_expression ADDASSIGN expression ;
Rule 41    compound_assignment_instruction -> variable_expression SUBASSIGN expression ;
Rule 42    compound_assignment_instruction -> variable_expression MULASSIGN expression ;
Rule 43    compound_assignment_instruction -> variable_expression DIVASSIGN expression ;
Rule 44    if_instruction -> IF ( condition ) instruction
Rule 45    if_instruction -> IF ( condition ) instruction ELSE instruction
Rule 46    while_instruction -> WHILE ( condition ) instruction
Rule 47    for_instruction -> FOR variable_expression = expression : expression instruction
Rule 48    compound_instruction -> { instructions }
Rule 49    condition -> expression
Rule 50    expression -> FLOATNUM
Rule 51    expression -> INTNUM
Rule 52    expression -> STRING
Rule 53    expression -> variable_expression
Rule 54    variable_expression -> ID
Rule 55    variable_expression -> ID [ expression , expression ]
Rule 56    expression -> ( expression )
Rule 57    expression_lists -> expression_lists ; expression_list
Rule 58    expression_lists -> expression_list
Rule 59    expression_list -> expression_list , expression
Rule 60    expression_list -> expression

Terminals, with rules where they appear

"                    : 18 18
'                    : 36
(                    : 37 38 39 44 45 46 56
)                    : 37 38 39 44 45 46 56
*                    : 23
+                    : 21
,                    : 55 59
-                    : 22 35
/                    : 24
:                    : 47
;                    : 14 15 16 17 18 19 20 40 41 42 43 57
=                    : 19 20 47
ADDASSIGN            : 40
BREAK                : 15
CONTINUE             : 16
DIVASSIGN            : 43
DOTADD               : 31
DOTDIV               : 34
DOTMUL               : 33
DOTSUB               : 32
ELSE                 : 45
EQ                   : 25
EYE                  : 39
FLOATNUM             : 50
FOR                  : 47
GREATER              : 28
GREATEREQ            : 30
ID                   : 54 55
IF                   : 44 45
INTNUM               : 51
LESS                 : 27
LESSEQ               : 29
MULASSIGN            : 42
NOTEQ                : 26
ONES                 : 38
PRINT                : 17 18
RETURN               : 14
STRING               : 52
SUBASSIGN            : 41
WHILE                : 46
ZEROS                : 37
[                    : 20 55
]                    : 20 55
error                : 
{                    : 48
}                    : 48

Nonterminals, with rules where they appear

assignment_instruction : 11
break_instruction    : 5
compound_assignment_instruction : 12
compound_instruction : 13
condition            : 44 45 46
continue_instruction : 6
expression           : 14 19 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 36 37 38 39 40 41 42 43 47 47 49 55 55 56 59 60
expression_list      : 17 18 57 58 59
expression_lists     : 20 57
for_instruction      : 9
if_instruction       : 10
instruction          : 2 3 44 45 45 46 47
instructions         : 1 2 48
print_instruction    : 7
program              : 0
return_instruction   : 4
variable_expression  : 19 20 40 41 42 43 47 53
while_instruction    : 8

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . return_instruction
    (5) instruction -> . break_instruction
    (6) instruction -> . continue_instruction
    (7) instruction -> . print_instruction
    (8) instruction -> . while_instruction
    (9) instruction -> . for_instruction
    (10) instruction -> . if_instruction
    (11) instruction -> . assignment_instruction
    (12) instruction -> . compound_assignment_instruction
    (13) instruction -> . compound_instruction
    (14) return_instruction -> . RETURN expression ;
    (15) break_instruction -> . BREAK ;
    (16) continue_instruction -> . CONTINUE ;
    (17) print_instruction -> . PRINT expression_list ;
    (18) print_instruction -> . PRINT " expression_list " ;
    (46) while_instruction -> . WHILE ( condition ) instruction
    (47) for_instruction -> . FOR variable_expression = expression : expression instruction
    (44) if_instruction -> . IF ( condition ) instruction
    (45) if_instruction -> . IF ( condition ) instruction ELSE instruction
    (19) assignment_instruction -> . variable_expression = expression ;
    (20) assignment_instruction -> . variable_expression = [ expression_lists ] ;
    (40) compound_assignment_instruction -> . variable_expression ADDASSIGN expression ;
    (41) compound_assignment_instruction -> . variable_expression SUBASSIGN expression ;
    (42) compound_assignment_instruction -> . variable_expression MULASSIGN expression ;
    (43) compound_assignment_instruction -> . variable_expression DIVASSIGN expression ;
    (48) compound_instruction -> . { instructions }
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    RETURN          shift and go to state 14
    BREAK           shift and go to state 15
    CONTINUE        shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    {               shift and go to state 22
    ID              shift and go to state 23

    program                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    return_instruction             shift and go to state 4
    break_instruction              shift and go to state 5
    continue_instruction           shift and go to state 6
    print_instruction              shift and go to state 7
    while_instruction              shift and go to state 8
    for_instruction                shift and go to state 9
    if_instruction                 shift and go to state 10
    assignment_instruction         shift and go to state 11
    compound_assignment_instruction shift and go to state 12
    compound_instruction           shift and go to state 13
    variable_expression            shift and go to state 20

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . return_instruction
    (5) instruction -> . break_instruction
    (6) instruction -> . continue_instruction
    (7) instruction -> . print_instruction
    (8) instruction -> . while_instruction
    (9) instruction -> . for_instruction
    (10) instruction -> . if_instruction
    (11) instruction -> . assignment_instruction
    (12) instruction -> . compound_assignment_instruction
    (13) instruction -> . compound_instruction
    (14) return_instruction -> . RETURN expression ;
    (15) break_instruction -> . BREAK ;
    (16) continue_instruction -> . CONTINUE ;
    (17) print_instruction -> . PRINT expression_list ;
    (18) print_instruction -> . PRINT " expression_list " ;
    (46) while_instruction -> . WHILE ( condition ) instruction
    (47) for_instruction -> . FOR variable_expression = expression : expression instruction
    (44) if_instruction -> . IF ( condition ) instruction
    (45) if_instruction -> . IF ( condition ) instruction ELSE instruction
    (19) assignment_instruction -> . variable_expression = expression ;
    (20) assignment_instruction -> . variable_expression = [ expression_lists ] ;
    (40) compound_assignment_instruction -> . variable_expression ADDASSIGN expression ;
    (41) compound_assignment_instruction -> . variable_expression SUBASSIGN expression ;
    (42) compound_assignment_instruction -> . variable_expression MULASSIGN expression ;
    (43) compound_assignment_instruction -> . variable_expression DIVASSIGN expression ;
    (48) compound_instruction -> . { instructions }
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    $end            reduce using rule 1 (program -> instructions .)
    RETURN          shift and go to state 14
    BREAK           shift and go to state 15
    CONTINUE        shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    {               shift and go to state 22
    ID              shift and go to state 23

    instruction                    shift and go to state 24
    return_instruction             shift and go to state 4
    break_instruction              shift and go to state 5
    continue_instruction           shift and go to state 6
    print_instruction              shift and go to state 7
    while_instruction              shift and go to state 8
    for_instruction                shift and go to state 9
    if_instruction                 shift and go to state 10
    assignment_instruction         shift and go to state 11
    compound_assignment_instruction shift and go to state 12
    compound_instruction           shift and go to state 13
    variable_expression            shift and go to state 20

state 3

    (3) instructions -> instruction .

    RETURN          reduce using rule 3 (instructions -> instruction .)
    BREAK           reduce using rule 3 (instructions -> instruction .)
    CONTINUE        reduce using rule 3 (instructions -> instruction .)
    PRINT           reduce using rule 3 (instructions -> instruction .)
    WHILE           reduce using rule 3 (instructions -> instruction .)
    FOR             reduce using rule 3 (instructions -> instruction .)
    IF              reduce using rule 3 (instructions -> instruction .)
    {               reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)
    }               reduce using rule 3 (instructions -> instruction .)


state 4

    (4) instruction -> return_instruction .

    RETURN          reduce using rule 4 (instruction -> return_instruction .)
    BREAK           reduce using rule 4 (instruction -> return_instruction .)
    CONTINUE        reduce using rule 4 (instruction -> return_instruction .)
    PRINT           reduce using rule 4 (instruction -> return_instruction .)
    WHILE           reduce using rule 4 (instruction -> return_instruction .)
    FOR             reduce using rule 4 (instruction -> return_instruction .)
    IF              reduce using rule 4 (instruction -> return_instruction .)
    {               reduce using rule 4 (instruction -> return_instruction .)
    ID              reduce using rule 4 (instruction -> return_instruction .)
    $end            reduce using rule 4 (instruction -> return_instruction .)
    }               reduce using rule 4 (instruction -> return_instruction .)
    ELSE            reduce using rule 4 (instruction -> return_instruction .)


state 5

    (5) instruction -> break_instruction .

    RETURN          reduce using rule 5 (instruction -> break_instruction .)
    BREAK           reduce using rule 5 (instruction -> break_instruction .)
    CONTINUE        reduce using rule 5 (instruction -> break_instruction .)
    PRINT           reduce using rule 5 (instruction -> break_instruction .)
    WHILE           reduce using rule 5 (instruction -> break_instruction .)
    FOR             reduce using rule 5 (instruction -> break_instruction .)
    IF              reduce using rule 5 (instruction -> break_instruction .)
    {               reduce using rule 5 (instruction -> break_instruction .)
    ID              reduce using rule 5 (instruction -> break_instruction .)
    $end            reduce using rule 5 (instruction -> break_instruction .)
    }               reduce using rule 5 (instruction -> break_instruction .)
    ELSE            reduce using rule 5 (instruction -> break_instruction .)


state 6

    (6) instruction -> continue_instruction .

    RETURN          reduce using rule 6 (instruction -> continue_instruction .)
    BREAK           reduce using rule 6 (instruction -> continue_instruction .)
    CONTINUE        reduce using rule 6 (instruction -> continue_instruction .)
    PRINT           reduce using rule 6 (instruction -> continue_instruction .)
    WHILE           reduce using rule 6 (instruction -> continue_instruction .)
    FOR             reduce using rule 6 (instruction -> continue_instruction .)
    IF              reduce using rule 6 (instruction -> continue_instruction .)
    {               reduce using rule 6 (instruction -> continue_instruction .)
    ID              reduce using rule 6 (instruction -> continue_instruction .)
    $end            reduce using rule 6 (instruction -> continue_instruction .)
    }               reduce using rule 6 (instruction -> continue_instruction .)
    ELSE            reduce using rule 6 (instruction -> continue_instruction .)


state 7

    (7) instruction -> print_instruction .

    RETURN          reduce using rule 7 (instruction -> print_instruction .)
    BREAK           reduce using rule 7 (instruction -> print_instruction .)
    CONTINUE        reduce using rule 7 (instruction -> print_instruction .)
    PRINT           reduce using rule 7 (instruction -> print_instruction .)
    WHILE           reduce using rule 7 (instruction -> print_instruction .)
    FOR             reduce using rule 7 (instruction -> print_instruction .)
    IF              reduce using rule 7 (instruction -> print_instruction .)
    {               reduce using rule 7 (instruction -> print_instruction .)
    ID              reduce using rule 7 (instruction -> print_instruction .)
    $end            reduce using rule 7 (instruction -> print_instruction .)
    }               reduce using rule 7 (instruction -> print_instruction .)
    ELSE            reduce using rule 7 (instruction -> print_instruction .)


state 8

    (8) instruction -> while_instruction .

    RETURN          reduce using rule 8 (instruction -> while_instruction .)
    BREAK           reduce using rule 8 (instruction -> while_instruction .)
    CONTINUE        reduce using rule 8 (instruction -> while_instruction .)
    PRINT           reduce using rule 8 (instruction -> while_instruction .)
    WHILE           reduce using rule 8 (instruction -> while_instruction .)
    FOR             reduce using rule 8 (instruction -> while_instruction .)
    IF              reduce using rule 8 (instruction -> while_instruction .)
    {               reduce using rule 8 (instruction -> while_instruction .)
    ID              reduce using rule 8 (instruction -> while_instruction .)
    $end            reduce using rule 8 (instruction -> while_instruction .)
    }               reduce using rule 8 (instruction -> while_instruction .)
    ELSE            reduce using rule 8 (instruction -> while_instruction .)


state 9

    (9) instruction -> for_instruction .

    RETURN          reduce using rule 9 (instruction -> for_instruction .)
    BREAK           reduce using rule 9 (instruction -> for_instruction .)
    CONTINUE        reduce using rule 9 (instruction -> for_instruction .)
    PRINT           reduce using rule 9 (instruction -> for_instruction .)
    WHILE           reduce using rule 9 (instruction -> for_instruction .)
    FOR             reduce using rule 9 (instruction -> for_instruction .)
    IF              reduce using rule 9 (instruction -> for_instruction .)
    {               reduce using rule 9 (instruction -> for_instruction .)
    ID              reduce using rule 9 (instruction -> for_instruction .)
    $end            reduce using rule 9 (instruction -> for_instruction .)
    }               reduce using rule 9 (instruction -> for_instruction .)
    ELSE            reduce using rule 9 (instruction -> for_instruction .)


state 10

    (10) instruction -> if_instruction .

    RETURN          reduce using rule 10 (instruction -> if_instruction .)
    BREAK           reduce using rule 10 (instruction -> if_instruction .)
    CONTINUE        reduce using rule 10 (instruction -> if_instruction .)
    PRINT           reduce using rule 10 (instruction -> if_instruction .)
    WHILE           reduce using rule 10 (instruction -> if_instruction .)
    FOR             reduce using rule 10 (instruction -> if_instruction .)
    IF              reduce using rule 10 (instruction -> if_instruction .)
    {               reduce using rule 10 (instruction -> if_instruction .)
    ID              reduce using rule 10 (instruction -> if_instruction .)
    $end            reduce using rule 10 (instruction -> if_instruction .)
    }               reduce using rule 10 (instruction -> if_instruction .)
    ELSE            reduce using rule 10 (instruction -> if_instruction .)


state 11

    (11) instruction -> assignment_instruction .

    RETURN          reduce using rule 11 (instruction -> assignment_instruction .)
    BREAK           reduce using rule 11 (instruction -> assignment_instruction .)
    CONTINUE        reduce using rule 11 (instruction -> assignment_instruction .)
    PRINT           reduce using rule 11 (instruction -> assignment_instruction .)
    WHILE           reduce using rule 11 (instruction -> assignment_instruction .)
    FOR             reduce using rule 11 (instruction -> assignment_instruction .)
    IF              reduce using rule 11 (instruction -> assignment_instruction .)
    {               reduce using rule 11 (instruction -> assignment_instruction .)
    ID              reduce using rule 11 (instruction -> assignment_instruction .)
    $end            reduce using rule 11 (instruction -> assignment_instruction .)
    }               reduce using rule 11 (instruction -> assignment_instruction .)
    ELSE            reduce using rule 11 (instruction -> assignment_instruction .)


state 12

    (12) instruction -> compound_assignment_instruction .

    RETURN          reduce using rule 12 (instruction -> compound_assignment_instruction .)
    BREAK           reduce using rule 12 (instruction -> compound_assignment_instruction .)
    CONTINUE        reduce using rule 12 (instruction -> compound_assignment_instruction .)
    PRINT           reduce using rule 12 (instruction -> compound_assignment_instruction .)
    WHILE           reduce using rule 12 (instruction -> compound_assignment_instruction .)
    FOR             reduce using rule 12 (instruction -> compound_assignment_instruction .)
    IF              reduce using rule 12 (instruction -> compound_assignment_instruction .)
    {               reduce using rule 12 (instruction -> compound_assignment_instruction .)
    ID              reduce using rule 12 (instruction -> compound_assignment_instruction .)
    $end            reduce using rule 12 (instruction -> compound_assignment_instruction .)
    }               reduce using rule 12 (instruction -> compound_assignment_instruction .)
    ELSE            reduce using rule 12 (instruction -> compound_assignment_instruction .)


state 13

    (13) instruction -> compound_instruction .

    RETURN          reduce using rule 13 (instruction -> compound_instruction .)
    BREAK           reduce using rule 13 (instruction -> compound_instruction .)
    CONTINUE        reduce using rule 13 (instruction -> compound_instruction .)
    PRINT           reduce using rule 13 (instruction -> compound_instruction .)
    WHILE           reduce using rule 13 (instruction -> compound_instruction .)
    FOR             reduce using rule 13 (instruction -> compound_instruction .)
    IF              reduce using rule 13 (instruction -> compound_instruction .)
    {               reduce using rule 13 (instruction -> compound_instruction .)
    ID              reduce using rule 13 (instruction -> compound_instruction .)
    $end            reduce using rule 13 (instruction -> compound_instruction .)
    }               reduce using rule 13 (instruction -> compound_instruction .)
    ELSE            reduce using rule 13 (instruction -> compound_instruction .)


state 14

    (14) return_instruction -> RETURN . expression ;
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 25
    variable_expression            shift and go to state 34

state 15

    (15) break_instruction -> BREAK . ;

    ;               shift and go to state 35


state 16

    (16) continue_instruction -> CONTINUE . ;

    ;               shift and go to state 36


state 17

    (17) print_instruction -> PRINT . expression_list ;
    (18) print_instruction -> PRINT . " expression_list " ;
    (59) expression_list -> . expression_list , expression
    (60) expression_list -> . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    "               shift and go to state 38
    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression_list                shift and go to state 37
    expression                     shift and go to state 39
    variable_expression            shift and go to state 34

state 18

    (46) while_instruction -> WHILE . ( condition ) instruction

    (               shift and go to state 40


state 19

    (47) for_instruction -> FOR . variable_expression = expression : expression instruction
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    ID              shift and go to state 23

    variable_expression            shift and go to state 41

state 20

    (19) assignment_instruction -> variable_expression . = expression ;
    (20) assignment_instruction -> variable_expression . = [ expression_lists ] ;
    (40) compound_assignment_instruction -> variable_expression . ADDASSIGN expression ;
    (41) compound_assignment_instruction -> variable_expression . SUBASSIGN expression ;
    (42) compound_assignment_instruction -> variable_expression . MULASSIGN expression ;
    (43) compound_assignment_instruction -> variable_expression . DIVASSIGN expression ;

    =               shift and go to state 42
    ADDASSIGN       shift and go to state 43
    SUBASSIGN       shift and go to state 44
    MULASSIGN       shift and go to state 45
    DIVASSIGN       shift and go to state 46


state 21

    (44) if_instruction -> IF . ( condition ) instruction
    (45) if_instruction -> IF . ( condition ) instruction ELSE instruction

    (               shift and go to state 47


state 22

    (48) compound_instruction -> { . instructions }
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . return_instruction
    (5) instruction -> . break_instruction
    (6) instruction -> . continue_instruction
    (7) instruction -> . print_instruction
    (8) instruction -> . while_instruction
    (9) instruction -> . for_instruction
    (10) instruction -> . if_instruction
    (11) instruction -> . assignment_instruction
    (12) instruction -> . compound_assignment_instruction
    (13) instruction -> . compound_instruction
    (14) return_instruction -> . RETURN expression ;
    (15) break_instruction -> . BREAK ;
    (16) continue_instruction -> . CONTINUE ;
    (17) print_instruction -> . PRINT expression_list ;
    (18) print_instruction -> . PRINT " expression_list " ;
    (46) while_instruction -> . WHILE ( condition ) instruction
    (47) for_instruction -> . FOR variable_expression = expression : expression instruction
    (44) if_instruction -> . IF ( condition ) instruction
    (45) if_instruction -> . IF ( condition ) instruction ELSE instruction
    (19) assignment_instruction -> . variable_expression = expression ;
    (20) assignment_instruction -> . variable_expression = [ expression_lists ] ;
    (40) compound_assignment_instruction -> . variable_expression ADDASSIGN expression ;
    (41) compound_assignment_instruction -> . variable_expression SUBASSIGN expression ;
    (42) compound_assignment_instruction -> . variable_expression MULASSIGN expression ;
    (43) compound_assignment_instruction -> . variable_expression DIVASSIGN expression ;
    (48) compound_instruction -> . { instructions }
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    RETURN          shift and go to state 14
    BREAK           shift and go to state 15
    CONTINUE        shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    {               shift and go to state 22
    ID              shift and go to state 23

    instructions                   shift and go to state 48
    instruction                    shift and go to state 3
    return_instruction             shift and go to state 4
    break_instruction              shift and go to state 5
    continue_instruction           shift and go to state 6
    print_instruction              shift and go to state 7
    while_instruction              shift and go to state 8
    for_instruction                shift and go to state 9
    if_instruction                 shift and go to state 10
    assignment_instruction         shift and go to state 11
    compound_assignment_instruction shift and go to state 12
    compound_instruction           shift and go to state 13
    variable_expression            shift and go to state 20

state 23

    (54) variable_expression -> ID .
    (55) variable_expression -> ID . [ expression , expression ]

    =               reduce using rule 54 (variable_expression -> ID .)
    ADDASSIGN       reduce using rule 54 (variable_expression -> ID .)
    SUBASSIGN       reduce using rule 54 (variable_expression -> ID .)
    MULASSIGN       reduce using rule 54 (variable_expression -> ID .)
    DIVASSIGN       reduce using rule 54 (variable_expression -> ID .)
    ;               reduce using rule 54 (variable_expression -> ID .)
    +               reduce using rule 54 (variable_expression -> ID .)
    -               reduce using rule 54 (variable_expression -> ID .)
    *               reduce using rule 54 (variable_expression -> ID .)
    /               reduce using rule 54 (variable_expression -> ID .)
    EQ              reduce using rule 54 (variable_expression -> ID .)
    NOTEQ           reduce using rule 54 (variable_expression -> ID .)
    LESS            reduce using rule 54 (variable_expression -> ID .)
    GREATER         reduce using rule 54 (variable_expression -> ID .)
    LESSEQ          reduce using rule 54 (variable_expression -> ID .)
    GREATEREQ       reduce using rule 54 (variable_expression -> ID .)
    DOTADD          reduce using rule 54 (variable_expression -> ID .)
    DOTSUB          reduce using rule 54 (variable_expression -> ID .)
    DOTMUL          reduce using rule 54 (variable_expression -> ID .)
    DOTDIV          reduce using rule 54 (variable_expression -> ID .)
    '               reduce using rule 54 (variable_expression -> ID .)
    ,               reduce using rule 54 (variable_expression -> ID .)
    )               reduce using rule 54 (variable_expression -> ID .)
    "               reduce using rule 54 (variable_expression -> ID .)
    ]               reduce using rule 54 (variable_expression -> ID .)
    :               reduce using rule 54 (variable_expression -> ID .)
    RETURN          reduce using rule 54 (variable_expression -> ID .)
    BREAK           reduce using rule 54 (variable_expression -> ID .)
    CONTINUE        reduce using rule 54 (variable_expression -> ID .)
    PRINT           reduce using rule 54 (variable_expression -> ID .)
    WHILE           reduce using rule 54 (variable_expression -> ID .)
    FOR             reduce using rule 54 (variable_expression -> ID .)
    IF              reduce using rule 54 (variable_expression -> ID .)
    {               reduce using rule 54 (variable_expression -> ID .)
    ID              reduce using rule 54 (variable_expression -> ID .)
    [               shift and go to state 49


state 24

    (2) instructions -> instructions instruction .

    RETURN          reduce using rule 2 (instructions -> instructions instruction .)
    BREAK           reduce using rule 2 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 2 (instructions -> instructions instruction .)
    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    WHILE           reduce using rule 2 (instructions -> instructions instruction .)
    FOR             reduce using rule 2 (instructions -> instructions instruction .)
    IF              reduce using rule 2 (instructions -> instructions instruction .)
    {               reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    }               reduce using rule 2 (instructions -> instructions instruction .)


state 25

    (14) return_instruction -> RETURN expression . ;
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               shift and go to state 50
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 26

    (35) expression -> - . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 66
    variable_expression            shift and go to state 34

state 27

    (37) expression -> ZEROS . ( expression )

    (               shift and go to state 67


state 28

    (56) expression -> ( . expression )
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 68
    variable_expression            shift and go to state 34

state 29

    (38) expression -> ONES . ( expression )

    (               shift and go to state 69


state 30

    (39) expression -> EYE . ( expression )

    (               shift and go to state 70


state 31

    (50) expression -> FLOATNUM .

    ;               reduce using rule 50 (expression -> FLOATNUM .)
    +               reduce using rule 50 (expression -> FLOATNUM .)
    -               reduce using rule 50 (expression -> FLOATNUM .)
    *               reduce using rule 50 (expression -> FLOATNUM .)
    /               reduce using rule 50 (expression -> FLOATNUM .)
    EQ              reduce using rule 50 (expression -> FLOATNUM .)
    NOTEQ           reduce using rule 50 (expression -> FLOATNUM .)
    LESS            reduce using rule 50 (expression -> FLOATNUM .)
    GREATER         reduce using rule 50 (expression -> FLOATNUM .)
    LESSEQ          reduce using rule 50 (expression -> FLOATNUM .)
    GREATEREQ       reduce using rule 50 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 50 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 50 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 50 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 50 (expression -> FLOATNUM .)
    '               reduce using rule 50 (expression -> FLOATNUM .)
    ,               reduce using rule 50 (expression -> FLOATNUM .)
    )               reduce using rule 50 (expression -> FLOATNUM .)
    "               reduce using rule 50 (expression -> FLOATNUM .)
    ]               reduce using rule 50 (expression -> FLOATNUM .)
    :               reduce using rule 50 (expression -> FLOATNUM .)
    RETURN          reduce using rule 50 (expression -> FLOATNUM .)
    BREAK           reduce using rule 50 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 50 (expression -> FLOATNUM .)
    PRINT           reduce using rule 50 (expression -> FLOATNUM .)
    WHILE           reduce using rule 50 (expression -> FLOATNUM .)
    FOR             reduce using rule 50 (expression -> FLOATNUM .)
    IF              reduce using rule 50 (expression -> FLOATNUM .)
    {               reduce using rule 50 (expression -> FLOATNUM .)
    ID              reduce using rule 50 (expression -> FLOATNUM .)


state 32

    (51) expression -> INTNUM .

    ;               reduce using rule 51 (expression -> INTNUM .)
    +               reduce using rule 51 (expression -> INTNUM .)
    -               reduce using rule 51 (expression -> INTNUM .)
    *               reduce using rule 51 (expression -> INTNUM .)
    /               reduce using rule 51 (expression -> INTNUM .)
    EQ              reduce using rule 51 (expression -> INTNUM .)
    NOTEQ           reduce using rule 51 (expression -> INTNUM .)
    LESS            reduce using rule 51 (expression -> INTNUM .)
    GREATER         reduce using rule 51 (expression -> INTNUM .)
    LESSEQ          reduce using rule 51 (expression -> INTNUM .)
    GREATEREQ       reduce using rule 51 (expression -> INTNUM .)
    DOTADD          reduce using rule 51 (expression -> INTNUM .)
    DOTSUB          reduce using rule 51 (expression -> INTNUM .)
    DOTMUL          reduce using rule 51 (expression -> INTNUM .)
    DOTDIV          reduce using rule 51 (expression -> INTNUM .)
    '               reduce using rule 51 (expression -> INTNUM .)
    ,               reduce using rule 51 (expression -> INTNUM .)
    )               reduce using rule 51 (expression -> INTNUM .)
    "               reduce using rule 51 (expression -> INTNUM .)
    ]               reduce using rule 51 (expression -> INTNUM .)
    :               reduce using rule 51 (expression -> INTNUM .)
    RETURN          reduce using rule 51 (expression -> INTNUM .)
    BREAK           reduce using rule 51 (expression -> INTNUM .)
    CONTINUE        reduce using rule 51 (expression -> INTNUM .)
    PRINT           reduce using rule 51 (expression -> INTNUM .)
    WHILE           reduce using rule 51 (expression -> INTNUM .)
    FOR             reduce using rule 51 (expression -> INTNUM .)
    IF              reduce using rule 51 (expression -> INTNUM .)
    {               reduce using rule 51 (expression -> INTNUM .)
    ID              reduce using rule 51 (expression -> INTNUM .)


state 33

    (52) expression -> STRING .

    ;               reduce using rule 52 (expression -> STRING .)
    +               reduce using rule 52 (expression -> STRING .)
    -               reduce using rule 52 (expression -> STRING .)
    *               reduce using rule 52 (expression -> STRING .)
    /               reduce using rule 52 (expression -> STRING .)
    EQ              reduce using rule 52 (expression -> STRING .)
    NOTEQ           reduce using rule 52 (expression -> STRING .)
    LESS            reduce using rule 52 (expression -> STRING .)
    GREATER         reduce using rule 52 (expression -> STRING .)
    LESSEQ          reduce using rule 52 (expression -> STRING .)
    GREATEREQ       reduce using rule 52 (expression -> STRING .)
    DOTADD          reduce using rule 52 (expression -> STRING .)
    DOTSUB          reduce using rule 52 (expression -> STRING .)
    DOTMUL          reduce using rule 52 (expression -> STRING .)
    DOTDIV          reduce using rule 52 (expression -> STRING .)
    '               reduce using rule 52 (expression -> STRING .)
    ,               reduce using rule 52 (expression -> STRING .)
    )               reduce using rule 52 (expression -> STRING .)
    "               reduce using rule 52 (expression -> STRING .)
    ]               reduce using rule 52 (expression -> STRING .)
    :               reduce using rule 52 (expression -> STRING .)
    RETURN          reduce using rule 52 (expression -> STRING .)
    BREAK           reduce using rule 52 (expression -> STRING .)
    CONTINUE        reduce using rule 52 (expression -> STRING .)
    PRINT           reduce using rule 52 (expression -> STRING .)
    WHILE           reduce using rule 52 (expression -> STRING .)
    FOR             reduce using rule 52 (expression -> STRING .)
    IF              reduce using rule 52 (expression -> STRING .)
    {               reduce using rule 52 (expression -> STRING .)
    ID              reduce using rule 52 (expression -> STRING .)


state 34

    (53) expression -> variable_expression .

    ;               reduce using rule 53 (expression -> variable_expression .)
    +               reduce using rule 53 (expression -> variable_expression .)
    -               reduce using rule 53 (expression -> variable_expression .)
    *               reduce using rule 53 (expression -> variable_expression .)
    /               reduce using rule 53 (expression -> variable_expression .)
    EQ              reduce using rule 53 (expression -> variable_expression .)
    NOTEQ           reduce using rule 53 (expression -> variable_expression .)
    LESS            reduce using rule 53 (expression -> variable_expression .)
    GREATER         reduce using rule 53 (expression -> variable_expression .)
    LESSEQ          reduce using rule 53 (expression -> variable_expression .)
    GREATEREQ       reduce using rule 53 (expression -> variable_expression .)
    DOTADD          reduce using rule 53 (expression -> variable_expression .)
    DOTSUB          reduce using rule 53 (expression -> variable_expression .)
    DOTMUL          reduce using rule 53 (expression -> variable_expression .)
    DOTDIV          reduce using rule 53 (expression -> variable_expression .)
    '               reduce using rule 53 (expression -> variable_expression .)
    ,               reduce using rule 53 (expression -> variable_expression .)
    )               reduce using rule 53 (expression -> variable_expression .)
    "               reduce using rule 53 (expression -> variable_expression .)
    ]               reduce using rule 53 (expression -> variable_expression .)
    :               reduce using rule 53 (expression -> variable_expression .)
    RETURN          reduce using rule 53 (expression -> variable_expression .)
    BREAK           reduce using rule 53 (expression -> variable_expression .)
    CONTINUE        reduce using rule 53 (expression -> variable_expression .)
    PRINT           reduce using rule 53 (expression -> variable_expression .)
    WHILE           reduce using rule 53 (expression -> variable_expression .)
    FOR             reduce using rule 53 (expression -> variable_expression .)
    IF              reduce using rule 53 (expression -> variable_expression .)
    {               reduce using rule 53 (expression -> variable_expression .)
    ID              reduce using rule 53 (expression -> variable_expression .)


state 35

    (15) break_instruction -> BREAK ; .

    RETURN          reduce using rule 15 (break_instruction -> BREAK ; .)
    BREAK           reduce using rule 15 (break_instruction -> BREAK ; .)
    CONTINUE        reduce using rule 15 (break_instruction -> BREAK ; .)
    PRINT           reduce using rule 15 (break_instruction -> BREAK ; .)
    WHILE           reduce using rule 15 (break_instruction -> BREAK ; .)
    FOR             reduce using rule 15 (break_instruction -> BREAK ; .)
    IF              reduce using rule 15 (break_instruction -> BREAK ; .)
    {               reduce using rule 15 (break_instruction -> BREAK ; .)
    ID              reduce using rule 15 (break_instruction -> BREAK ; .)
    $end            reduce using rule 15 (break_instruction -> BREAK ; .)
    }               reduce using rule 15 (break_instruction -> BREAK ; .)
    ELSE            reduce using rule 15 (break_instruction -> BREAK ; .)


state 36

    (16) continue_instruction -> CONTINUE ; .

    RETURN          reduce using rule 16 (continue_instruction -> CONTINUE ; .)
    BREAK           reduce using rule 16 (continue_instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 16 (continue_instruction -> CONTINUE ; .)
    PRINT           reduce using rule 16 (continue_instruction -> CONTINUE ; .)
    WHILE           reduce using rule 16 (continue_instruction -> CONTINUE ; .)
    FOR             reduce using rule 16 (continue_instruction -> CONTINUE ; .)
    IF              reduce using rule 16 (continue_instruction -> CONTINUE ; .)
    {               reduce using rule 16 (continue_instruction -> CONTINUE ; .)
    ID              reduce using rule 16 (continue_instruction -> CONTINUE ; .)
    $end            reduce using rule 16 (continue_instruction -> CONTINUE ; .)
    }               reduce using rule 16 (continue_instruction -> CONTINUE ; .)
    ELSE            reduce using rule 16 (continue_instruction -> CONTINUE ; .)


state 37

    (17) print_instruction -> PRINT expression_list . ;
    (59) expression_list -> expression_list . , expression

    ;               shift and go to state 71
    ,               shift and go to state 72


state 38

    (18) print_instruction -> PRINT " . expression_list " ;
    (59) expression_list -> . expression_list , expression
    (60) expression_list -> . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression_list                shift and go to state 73
    expression                     shift and go to state 39
    variable_expression            shift and go to state 34

state 39

    (60) expression_list -> expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 60 (expression_list -> expression .)
    ,               reduce using rule 60 (expression_list -> expression .)
    "               reduce using rule 60 (expression_list -> expression .)
    ]               reduce using rule 60 (expression_list -> expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 40

    (46) while_instruction -> WHILE ( . condition ) instruction
    (49) condition -> . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    condition                      shift and go to state 74
    expression                     shift and go to state 75
    variable_expression            shift and go to state 34

state 41

    (47) for_instruction -> FOR variable_expression . = expression : expression instruction

    =               shift and go to state 76


state 42

    (19) assignment_instruction -> variable_expression = . expression ;
    (20) assignment_instruction -> variable_expression = . [ expression_lists ] ;
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    [               shift and go to state 78
    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    variable_expression            shift and go to state 34
    expression                     shift and go to state 77

state 43

    (40) compound_assignment_instruction -> variable_expression ADDASSIGN . expression ;
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    variable_expression            shift and go to state 34
    expression                     shift and go to state 79

state 44

    (41) compound_assignment_instruction -> variable_expression SUBASSIGN . expression ;
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    variable_expression            shift and go to state 34
    expression                     shift and go to state 80

state 45

    (42) compound_assignment_instruction -> variable_expression MULASSIGN . expression ;
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    variable_expression            shift and go to state 34
    expression                     shift and go to state 81

state 46

    (43) compound_assignment_instruction -> variable_expression DIVASSIGN . expression ;
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    variable_expression            shift and go to state 34
    expression                     shift and go to state 82

state 47

    (44) if_instruction -> IF ( . condition ) instruction
    (45) if_instruction -> IF ( . condition ) instruction ELSE instruction
    (49) condition -> . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    condition                      shift and go to state 83
    expression                     shift and go to state 75
    variable_expression            shift and go to state 34

state 48

    (48) compound_instruction -> { instructions . }
    (2) instructions -> instructions . instruction
    (4) instruction -> . return_instruction
    (5) instruction -> . break_instruction
    (6) instruction -> . continue_instruction
    (7) instruction -> . print_instruction
    (8) instruction -> . while_instruction
    (9) instruction -> . for_instruction
    (10) instruction -> . if_instruction
    (11) instruction -> . assignment_instruction
    (12) instruction -> . compound_assignment_instruction
    (13) instruction -> . compound_instruction
    (14) return_instruction -> . RETURN expression ;
    (15) break_instruction -> . BREAK ;
    (16) continue_instruction -> . CONTINUE ;
    (17) print_instruction -> . PRINT expression_list ;
    (18) print_instruction -> . PRINT " expression_list " ;
    (46) while_instruction -> . WHILE ( condition ) instruction
    (47) for_instruction -> . FOR variable_expression = expression : expression instruction
    (44) if_instruction -> . IF ( condition ) instruction
    (45) if_instruction -> . IF ( condition ) instruction ELSE instruction
    (19) assignment_instruction -> . variable_expression = expression ;
    (20) assignment_instruction -> . variable_expression = [ expression_lists ] ;
    (40) compound_assignment_instruction -> . variable_expression ADDASSIGN expression ;
    (41) compound_assignment_instruction -> . variable_expression SUBASSIGN expression ;
    (42) compound_assignment_instruction -> . variable_expression MULASSIGN expression ;
    (43) compound_assignment_instruction -> . variable_expression DIVASSIGN expression ;
    (48) compound_instruction -> . { instructions }
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    }               shift and go to state 84
    RETURN          shift and go to state 14
    BREAK           shift and go to state 15
    CONTINUE        shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    {               shift and go to state 22
    ID              shift and go to state 23

    instruction                    shift and go to state 24
    return_instruction             shift and go to state 4
    break_instruction              shift and go to state 5
    continue_instruction           shift and go to state 6
    print_instruction              shift and go to state 7
    while_instruction              shift and go to state 8
    for_instruction                shift and go to state 9
    if_instruction                 shift and go to state 10
    assignment_instruction         shift and go to state 11
    compound_assignment_instruction shift and go to state 12
    compound_instruction           shift and go to state 13
    variable_expression            shift and go to state 20

state 49

    (55) variable_expression -> ID [ . expression , expression ]
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 85
    variable_expression            shift and go to state 34

state 50

    (14) return_instruction -> RETURN expression ; .

    RETURN          reduce using rule 14 (return_instruction -> RETURN expression ; .)
    BREAK           reduce using rule 14 (return_instruction -> RETURN expression ; .)
    CONTINUE        reduce using rule 14 (return_instruction -> RETURN expression ; .)
    PRINT           reduce using rule 14 (return_instruction -> RETURN expression ; .)
    WHILE           reduce using rule 14 (return_instruction -> RETURN expression ; .)
    FOR             reduce using rule 14 (return_instruction -> RETURN expression ; .)
    IF              reduce using rule 14 (return_instruction -> RETURN expression ; .)
    {               reduce using rule 14 (return_instruction -> RETURN expression ; .)
    ID              reduce using rule 14 (return_instruction -> RETURN expression ; .)
    $end            reduce using rule 14 (return_instruction -> RETURN expression ; .)
    }               reduce using rule 14 (return_instruction -> RETURN expression ; .)
    ELSE            reduce using rule 14 (return_instruction -> RETURN expression ; .)


state 51

    (21) expression -> expression + . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 86
    variable_expression            shift and go to state 34

state 52

    (22) expression -> expression - . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 87
    variable_expression            shift and go to state 34

state 53

    (23) expression -> expression * . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 88
    variable_expression            shift and go to state 34

state 54

    (24) expression -> expression / . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 89
    variable_expression            shift and go to state 34

state 55

    (25) expression -> expression EQ . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 90
    variable_expression            shift and go to state 34

state 56

    (26) expression -> expression NOTEQ . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 91
    variable_expression            shift and go to state 34

state 57

    (27) expression -> expression LESS . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 92
    variable_expression            shift and go to state 34

state 58

    (28) expression -> expression GREATER . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 93
    variable_expression            shift and go to state 34

state 59

    (29) expression -> expression LESSEQ . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 94
    variable_expression            shift and go to state 34

state 60

    (30) expression -> expression GREATEREQ . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 95
    variable_expression            shift and go to state 34

state 61

    (31) expression -> expression DOTADD . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 96
    variable_expression            shift and go to state 34

state 62

    (32) expression -> expression DOTSUB . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 97
    variable_expression            shift and go to state 34

state 63

    (33) expression -> expression DOTMUL . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 98
    variable_expression            shift and go to state 34

state 64

    (34) expression -> expression DOTDIV . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 99
    variable_expression            shift and go to state 34

state 65

    (36) expression -> expression ' .

    ;               reduce using rule 36 (expression -> expression ' .)
    +               reduce using rule 36 (expression -> expression ' .)
    -               reduce using rule 36 (expression -> expression ' .)
    *               reduce using rule 36 (expression -> expression ' .)
    /               reduce using rule 36 (expression -> expression ' .)
    EQ              reduce using rule 36 (expression -> expression ' .)
    NOTEQ           reduce using rule 36 (expression -> expression ' .)
    LESS            reduce using rule 36 (expression -> expression ' .)
    GREATER         reduce using rule 36 (expression -> expression ' .)
    LESSEQ          reduce using rule 36 (expression -> expression ' .)
    GREATEREQ       reduce using rule 36 (expression -> expression ' .)
    DOTADD          reduce using rule 36 (expression -> expression ' .)
    DOTSUB          reduce using rule 36 (expression -> expression ' .)
    DOTMUL          reduce using rule 36 (expression -> expression ' .)
    DOTDIV          reduce using rule 36 (expression -> expression ' .)
    '               reduce using rule 36 (expression -> expression ' .)
    ,               reduce using rule 36 (expression -> expression ' .)
    )               reduce using rule 36 (expression -> expression ' .)
    "               reduce using rule 36 (expression -> expression ' .)
    ]               reduce using rule 36 (expression -> expression ' .)
    :               reduce using rule 36 (expression -> expression ' .)
    RETURN          reduce using rule 36 (expression -> expression ' .)
    BREAK           reduce using rule 36 (expression -> expression ' .)
    CONTINUE        reduce using rule 36 (expression -> expression ' .)
    PRINT           reduce using rule 36 (expression -> expression ' .)
    WHILE           reduce using rule 36 (expression -> expression ' .)
    FOR             reduce using rule 36 (expression -> expression ' .)
    IF              reduce using rule 36 (expression -> expression ' .)
    {               reduce using rule 36 (expression -> expression ' .)
    ID              reduce using rule 36 (expression -> expression ' .)


state 66

    (35) expression -> - expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 35 (expression -> - expression .)
    +               reduce using rule 35 (expression -> - expression .)
    -               reduce using rule 35 (expression -> - expression .)
    *               reduce using rule 35 (expression -> - expression .)
    /               reduce using rule 35 (expression -> - expression .)
    EQ              reduce using rule 35 (expression -> - expression .)
    NOTEQ           reduce using rule 35 (expression -> - expression .)
    LESS            reduce using rule 35 (expression -> - expression .)
    GREATER         reduce using rule 35 (expression -> - expression .)
    LESSEQ          reduce using rule 35 (expression -> - expression .)
    GREATEREQ       reduce using rule 35 (expression -> - expression .)
    DOTADD          reduce using rule 35 (expression -> - expression .)
    DOTSUB          reduce using rule 35 (expression -> - expression .)
    DOTMUL          reduce using rule 35 (expression -> - expression .)
    DOTDIV          reduce using rule 35 (expression -> - expression .)
    '               reduce using rule 35 (expression -> - expression .)
    ,               reduce using rule 35 (expression -> - expression .)
    )               reduce using rule 35 (expression -> - expression .)
    "               reduce using rule 35 (expression -> - expression .)
    ]               reduce using rule 35 (expression -> - expression .)
    :               reduce using rule 35 (expression -> - expression .)
    RETURN          reduce using rule 35 (expression -> - expression .)
    BREAK           reduce using rule 35 (expression -> - expression .)
    CONTINUE        reduce using rule 35 (expression -> - expression .)
    PRINT           reduce using rule 35 (expression -> - expression .)
    WHILE           reduce using rule 35 (expression -> - expression .)
    FOR             reduce using rule 35 (expression -> - expression .)
    IF              reduce using rule 35 (expression -> - expression .)
    {               reduce using rule 35 (expression -> - expression .)
    ID              reduce using rule 35 (expression -> - expression .)

  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! '               [ shift and go to state 65 ]


state 67

    (37) expression -> ZEROS ( . expression )
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 100
    variable_expression            shift and go to state 34

state 68

    (56) expression -> ( expression . )
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    )               shift and go to state 101
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 69

    (38) expression -> ONES ( . expression )
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 102
    variable_expression            shift and go to state 34

state 70

    (39) expression -> EYE ( . expression )
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 103
    variable_expression            shift and go to state 34

state 71

    (17) print_instruction -> PRINT expression_list ; .

    RETURN          reduce using rule 17 (print_instruction -> PRINT expression_list ; .)
    BREAK           reduce using rule 17 (print_instruction -> PRINT expression_list ; .)
    CONTINUE        reduce using rule 17 (print_instruction -> PRINT expression_list ; .)
    PRINT           reduce using rule 17 (print_instruction -> PRINT expression_list ; .)
    WHILE           reduce using rule 17 (print_instruction -> PRINT expression_list ; .)
    FOR             reduce using rule 17 (print_instruction -> PRINT expression_list ; .)
    IF              reduce using rule 17 (print_instruction -> PRINT expression_list ; .)
    {               reduce using rule 17 (print_instruction -> PRINT expression_list ; .)
    ID              reduce using rule 17 (print_instruction -> PRINT expression_list ; .)
    $end            reduce using rule 17 (print_instruction -> PRINT expression_list ; .)
    }               reduce using rule 17 (print_instruction -> PRINT expression_list ; .)
    ELSE            reduce using rule 17 (print_instruction -> PRINT expression_list ; .)


state 72

    (59) expression_list -> expression_list , . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 104
    variable_expression            shift and go to state 34

state 73

    (18) print_instruction -> PRINT " expression_list . " ;
    (59) expression_list -> expression_list . , expression

    "               shift and go to state 105
    ,               shift and go to state 72


state 74

    (46) while_instruction -> WHILE ( condition . ) instruction

    )               shift and go to state 106


state 75

    (49) condition -> expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    )               reduce using rule 49 (condition -> expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 76

    (47) for_instruction -> FOR variable_expression = . expression : expression instruction
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    variable_expression            shift and go to state 34
    expression                     shift and go to state 107

state 77

    (19) assignment_instruction -> variable_expression = expression . ;
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               shift and go to state 108
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 78

    (20) assignment_instruction -> variable_expression = [ . expression_lists ] ;
    (57) expression_lists -> . expression_lists ; expression_list
    (58) expression_lists -> . expression_list
    (59) expression_list -> . expression_list , expression
    (60) expression_list -> . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    variable_expression            shift and go to state 34
    expression_lists               shift and go to state 109
    expression_list                shift and go to state 110
    expression                     shift and go to state 39

state 79

    (40) compound_assignment_instruction -> variable_expression ADDASSIGN expression . ;
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               shift and go to state 111
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 80

    (41) compound_assignment_instruction -> variable_expression SUBASSIGN expression . ;
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               shift and go to state 112
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 81

    (42) compound_assignment_instruction -> variable_expression MULASSIGN expression . ;
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               shift and go to state 113
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 82

    (43) compound_assignment_instruction -> variable_expression DIVASSIGN expression . ;
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               shift and go to state 114
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 83

    (44) if_instruction -> IF ( condition . ) instruction
    (45) if_instruction -> IF ( condition . ) instruction ELSE instruction

    )               shift and go to state 115


state 84

    (48) compound_instruction -> { instructions } .

    RETURN          reduce using rule 48 (compound_instruction -> { instructions } .)
    BREAK           reduce using rule 48 (compound_instruction -> { instructions } .)
    CONTINUE        reduce using rule 48 (compound_instruction -> { instructions } .)
    PRINT           reduce using rule 48 (compound_instruction -> { instructions } .)
    WHILE           reduce using rule 48 (compound_instruction -> { instructions } .)
    FOR             reduce using rule 48 (compound_instruction -> { instructions } .)
    IF              reduce using rule 48 (compound_instruction -> { instructions } .)
    {               reduce using rule 48 (compound_instruction -> { instructions } .)
    ID              reduce using rule 48 (compound_instruction -> { instructions } .)
    $end            reduce using rule 48 (compound_instruction -> { instructions } .)
    }               reduce using rule 48 (compound_instruction -> { instructions } .)
    ELSE            reduce using rule 48 (compound_instruction -> { instructions } .)


state 85

    (55) variable_expression -> ID [ expression . , expression ]
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ,               shift and go to state 116
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 86

    (21) expression -> expression + expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 21 (expression -> expression + expression .)
    +               reduce using rule 21 (expression -> expression + expression .)
    -               reduce using rule 21 (expression -> expression + expression .)
    EQ              reduce using rule 21 (expression -> expression + expression .)
    NOTEQ           reduce using rule 21 (expression -> expression + expression .)
    LESS            reduce using rule 21 (expression -> expression + expression .)
    GREATER         reduce using rule 21 (expression -> expression + expression .)
    LESSEQ          reduce using rule 21 (expression -> expression + expression .)
    GREATEREQ       reduce using rule 21 (expression -> expression + expression .)
    DOTADD          reduce using rule 21 (expression -> expression + expression .)
    DOTSUB          reduce using rule 21 (expression -> expression + expression .)
    '               reduce using rule 21 (expression -> expression + expression .)
    ,               reduce using rule 21 (expression -> expression + expression .)
    )               reduce using rule 21 (expression -> expression + expression .)
    "               reduce using rule 21 (expression -> expression + expression .)
    ]               reduce using rule 21 (expression -> expression + expression .)
    :               reduce using rule 21 (expression -> expression + expression .)
    RETURN          reduce using rule 21 (expression -> expression + expression .)
    BREAK           reduce using rule 21 (expression -> expression + expression .)
    CONTINUE        reduce using rule 21 (expression -> expression + expression .)
    PRINT           reduce using rule 21 (expression -> expression + expression .)
    WHILE           reduce using rule 21 (expression -> expression + expression .)
    FOR             reduce using rule 21 (expression -> expression + expression .)
    IF              reduce using rule 21 (expression -> expression + expression .)
    {               reduce using rule 21 (expression -> expression + expression .)
    ID              reduce using rule 21 (expression -> expression + expression .)
    *               shift and go to state 53
    /               shift and go to state 54
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64

  ! *               [ reduce using rule 21 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 21 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 21 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 21 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! '               [ shift and go to state 65 ]


state 87

    (22) expression -> expression - expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 22 (expression -> expression - expression .)
    +               reduce using rule 22 (expression -> expression - expression .)
    -               reduce using rule 22 (expression -> expression - expression .)
    EQ              reduce using rule 22 (expression -> expression - expression .)
    NOTEQ           reduce using rule 22 (expression -> expression - expression .)
    LESS            reduce using rule 22 (expression -> expression - expression .)
    GREATER         reduce using rule 22 (expression -> expression - expression .)
    LESSEQ          reduce using rule 22 (expression -> expression - expression .)
    GREATEREQ       reduce using rule 22 (expression -> expression - expression .)
    DOTADD          reduce using rule 22 (expression -> expression - expression .)
    DOTSUB          reduce using rule 22 (expression -> expression - expression .)
    '               reduce using rule 22 (expression -> expression - expression .)
    ,               reduce using rule 22 (expression -> expression - expression .)
    )               reduce using rule 22 (expression -> expression - expression .)
    "               reduce using rule 22 (expression -> expression - expression .)
    ]               reduce using rule 22 (expression -> expression - expression .)
    :               reduce using rule 22 (expression -> expression - expression .)
    RETURN          reduce using rule 22 (expression -> expression - expression .)
    BREAK           reduce using rule 22 (expression -> expression - expression .)
    CONTINUE        reduce using rule 22 (expression -> expression - expression .)
    PRINT           reduce using rule 22 (expression -> expression - expression .)
    WHILE           reduce using rule 22 (expression -> expression - expression .)
    FOR             reduce using rule 22 (expression -> expression - expression .)
    IF              reduce using rule 22 (expression -> expression - expression .)
    {               reduce using rule 22 (expression -> expression - expression .)
    ID              reduce using rule 22 (expression -> expression - expression .)
    *               shift and go to state 53
    /               shift and go to state 54
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64

  ! *               [ reduce using rule 22 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 22 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 22 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 22 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! '               [ shift and go to state 65 ]


state 88

    (23) expression -> expression * expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 23 (expression -> expression * expression .)
    +               reduce using rule 23 (expression -> expression * expression .)
    -               reduce using rule 23 (expression -> expression * expression .)
    *               reduce using rule 23 (expression -> expression * expression .)
    /               reduce using rule 23 (expression -> expression * expression .)
    EQ              reduce using rule 23 (expression -> expression * expression .)
    NOTEQ           reduce using rule 23 (expression -> expression * expression .)
    LESS            reduce using rule 23 (expression -> expression * expression .)
    GREATER         reduce using rule 23 (expression -> expression * expression .)
    LESSEQ          reduce using rule 23 (expression -> expression * expression .)
    GREATEREQ       reduce using rule 23 (expression -> expression * expression .)
    DOTADD          reduce using rule 23 (expression -> expression * expression .)
    DOTSUB          reduce using rule 23 (expression -> expression * expression .)
    DOTMUL          reduce using rule 23 (expression -> expression * expression .)
    DOTDIV          reduce using rule 23 (expression -> expression * expression .)
    '               reduce using rule 23 (expression -> expression * expression .)
    ,               reduce using rule 23 (expression -> expression * expression .)
    )               reduce using rule 23 (expression -> expression * expression .)
    "               reduce using rule 23 (expression -> expression * expression .)
    ]               reduce using rule 23 (expression -> expression * expression .)
    :               reduce using rule 23 (expression -> expression * expression .)
    RETURN          reduce using rule 23 (expression -> expression * expression .)
    BREAK           reduce using rule 23 (expression -> expression * expression .)
    CONTINUE        reduce using rule 23 (expression -> expression * expression .)
    PRINT           reduce using rule 23 (expression -> expression * expression .)
    WHILE           reduce using rule 23 (expression -> expression * expression .)
    FOR             reduce using rule 23 (expression -> expression * expression .)
    IF              reduce using rule 23 (expression -> expression * expression .)
    {               reduce using rule 23 (expression -> expression * expression .)
    ID              reduce using rule 23 (expression -> expression * expression .)

  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! '               [ shift and go to state 65 ]


state 89

    (24) expression -> expression / expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 24 (expression -> expression / expression .)
    +               reduce using rule 24 (expression -> expression / expression .)
    -               reduce using rule 24 (expression -> expression / expression .)
    *               reduce using rule 24 (expression -> expression / expression .)
    /               reduce using rule 24 (expression -> expression / expression .)
    EQ              reduce using rule 24 (expression -> expression / expression .)
    NOTEQ           reduce using rule 24 (expression -> expression / expression .)
    LESS            reduce using rule 24 (expression -> expression / expression .)
    GREATER         reduce using rule 24 (expression -> expression / expression .)
    LESSEQ          reduce using rule 24 (expression -> expression / expression .)
    GREATEREQ       reduce using rule 24 (expression -> expression / expression .)
    DOTADD          reduce using rule 24 (expression -> expression / expression .)
    DOTSUB          reduce using rule 24 (expression -> expression / expression .)
    DOTMUL          reduce using rule 24 (expression -> expression / expression .)
    DOTDIV          reduce using rule 24 (expression -> expression / expression .)
    '               reduce using rule 24 (expression -> expression / expression .)
    ,               reduce using rule 24 (expression -> expression / expression .)
    )               reduce using rule 24 (expression -> expression / expression .)
    "               reduce using rule 24 (expression -> expression / expression .)
    ]               reduce using rule 24 (expression -> expression / expression .)
    :               reduce using rule 24 (expression -> expression / expression .)
    RETURN          reduce using rule 24 (expression -> expression / expression .)
    BREAK           reduce using rule 24 (expression -> expression / expression .)
    CONTINUE        reduce using rule 24 (expression -> expression / expression .)
    PRINT           reduce using rule 24 (expression -> expression / expression .)
    WHILE           reduce using rule 24 (expression -> expression / expression .)
    FOR             reduce using rule 24 (expression -> expression / expression .)
    IF              reduce using rule 24 (expression -> expression / expression .)
    {               reduce using rule 24 (expression -> expression / expression .)
    ID              reduce using rule 24 (expression -> expression / expression .)

  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! '               [ shift and go to state 65 ]


state 90

    (25) expression -> expression EQ expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 25 (expression -> expression EQ expression .)
    EQ              reduce using rule 25 (expression -> expression EQ expression .)
    NOTEQ           reduce using rule 25 (expression -> expression EQ expression .)
    LESS            reduce using rule 25 (expression -> expression EQ expression .)
    GREATER         reduce using rule 25 (expression -> expression EQ expression .)
    LESSEQ          reduce using rule 25 (expression -> expression EQ expression .)
    GREATEREQ       reduce using rule 25 (expression -> expression EQ expression .)
    '               reduce using rule 25 (expression -> expression EQ expression .)
    ,               reduce using rule 25 (expression -> expression EQ expression .)
    )               reduce using rule 25 (expression -> expression EQ expression .)
    "               reduce using rule 25 (expression -> expression EQ expression .)
    ]               reduce using rule 25 (expression -> expression EQ expression .)
    :               reduce using rule 25 (expression -> expression EQ expression .)
    RETURN          reduce using rule 25 (expression -> expression EQ expression .)
    BREAK           reduce using rule 25 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 25 (expression -> expression EQ expression .)
    PRINT           reduce using rule 25 (expression -> expression EQ expression .)
    WHILE           reduce using rule 25 (expression -> expression EQ expression .)
    FOR             reduce using rule 25 (expression -> expression EQ expression .)
    IF              reduce using rule 25 (expression -> expression EQ expression .)
    {               reduce using rule 25 (expression -> expression EQ expression .)
    ID              reduce using rule 25 (expression -> expression EQ expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64

  ! +               [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! -               [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! *               [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! /               [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! DOTADD          [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! DOTSUB          [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! DOTMUL          [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! DOTDIV          [ reduce using rule 25 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! '               [ shift and go to state 65 ]


state 91

    (26) expression -> expression NOTEQ expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 26 (expression -> expression NOTEQ expression .)
    EQ              reduce using rule 26 (expression -> expression NOTEQ expression .)
    NOTEQ           reduce using rule 26 (expression -> expression NOTEQ expression .)
    LESS            reduce using rule 26 (expression -> expression NOTEQ expression .)
    GREATER         reduce using rule 26 (expression -> expression NOTEQ expression .)
    LESSEQ          reduce using rule 26 (expression -> expression NOTEQ expression .)
    GREATEREQ       reduce using rule 26 (expression -> expression NOTEQ expression .)
    '               reduce using rule 26 (expression -> expression NOTEQ expression .)
    ,               reduce using rule 26 (expression -> expression NOTEQ expression .)
    )               reduce using rule 26 (expression -> expression NOTEQ expression .)
    "               reduce using rule 26 (expression -> expression NOTEQ expression .)
    ]               reduce using rule 26 (expression -> expression NOTEQ expression .)
    :               reduce using rule 26 (expression -> expression NOTEQ expression .)
    RETURN          reduce using rule 26 (expression -> expression NOTEQ expression .)
    BREAK           reduce using rule 26 (expression -> expression NOTEQ expression .)
    CONTINUE        reduce using rule 26 (expression -> expression NOTEQ expression .)
    PRINT           reduce using rule 26 (expression -> expression NOTEQ expression .)
    WHILE           reduce using rule 26 (expression -> expression NOTEQ expression .)
    FOR             reduce using rule 26 (expression -> expression NOTEQ expression .)
    IF              reduce using rule 26 (expression -> expression NOTEQ expression .)
    {               reduce using rule 26 (expression -> expression NOTEQ expression .)
    ID              reduce using rule 26 (expression -> expression NOTEQ expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64

  ! +               [ reduce using rule 26 (expression -> expression NOTEQ expression .) ]
  ! -               [ reduce using rule 26 (expression -> expression NOTEQ expression .) ]
  ! *               [ reduce using rule 26 (expression -> expression NOTEQ expression .) ]
  ! /               [ reduce using rule 26 (expression -> expression NOTEQ expression .) ]
  ! DOTADD          [ reduce using rule 26 (expression -> expression NOTEQ expression .) ]
  ! DOTSUB          [ reduce using rule 26 (expression -> expression NOTEQ expression .) ]
  ! DOTMUL          [ reduce using rule 26 (expression -> expression NOTEQ expression .) ]
  ! DOTDIV          [ reduce using rule 26 (expression -> expression NOTEQ expression .) ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! '               [ shift and go to state 65 ]


state 92

    (27) expression -> expression LESS expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 27 (expression -> expression LESS expression .)
    EQ              reduce using rule 27 (expression -> expression LESS expression .)
    NOTEQ           reduce using rule 27 (expression -> expression LESS expression .)
    LESS            reduce using rule 27 (expression -> expression LESS expression .)
    GREATER         reduce using rule 27 (expression -> expression LESS expression .)
    LESSEQ          reduce using rule 27 (expression -> expression LESS expression .)
    GREATEREQ       reduce using rule 27 (expression -> expression LESS expression .)
    '               reduce using rule 27 (expression -> expression LESS expression .)
    ,               reduce using rule 27 (expression -> expression LESS expression .)
    )               reduce using rule 27 (expression -> expression LESS expression .)
    "               reduce using rule 27 (expression -> expression LESS expression .)
    ]               reduce using rule 27 (expression -> expression LESS expression .)
    :               reduce using rule 27 (expression -> expression LESS expression .)
    RETURN          reduce using rule 27 (expression -> expression LESS expression .)
    BREAK           reduce using rule 27 (expression -> expression LESS expression .)
    CONTINUE        reduce using rule 27 (expression -> expression LESS expression .)
    PRINT           reduce using rule 27 (expression -> expression LESS expression .)
    WHILE           reduce using rule 27 (expression -> expression LESS expression .)
    FOR             reduce using rule 27 (expression -> expression LESS expression .)
    IF              reduce using rule 27 (expression -> expression LESS expression .)
    {               reduce using rule 27 (expression -> expression LESS expression .)
    ID              reduce using rule 27 (expression -> expression LESS expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64

  ! +               [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! -               [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! *               [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! /               [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! DOTADD          [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! DOTSUB          [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! DOTMUL          [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! DOTDIV          [ reduce using rule 27 (expression -> expression LESS expression .) ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! '               [ shift and go to state 65 ]


state 93

    (28) expression -> expression GREATER expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 28 (expression -> expression GREATER expression .)
    EQ              reduce using rule 28 (expression -> expression GREATER expression .)
    NOTEQ           reduce using rule 28 (expression -> expression GREATER expression .)
    LESS            reduce using rule 28 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 28 (expression -> expression GREATER expression .)
    LESSEQ          reduce using rule 28 (expression -> expression GREATER expression .)
    GREATEREQ       reduce using rule 28 (expression -> expression GREATER expression .)
    '               reduce using rule 28 (expression -> expression GREATER expression .)
    ,               reduce using rule 28 (expression -> expression GREATER expression .)
    )               reduce using rule 28 (expression -> expression GREATER expression .)
    "               reduce using rule 28 (expression -> expression GREATER expression .)
    ]               reduce using rule 28 (expression -> expression GREATER expression .)
    :               reduce using rule 28 (expression -> expression GREATER expression .)
    RETURN          reduce using rule 28 (expression -> expression GREATER expression .)
    BREAK           reduce using rule 28 (expression -> expression GREATER expression .)
    CONTINUE        reduce using rule 28 (expression -> expression GREATER expression .)
    PRINT           reduce using rule 28 (expression -> expression GREATER expression .)
    WHILE           reduce using rule 28 (expression -> expression GREATER expression .)
    FOR             reduce using rule 28 (expression -> expression GREATER expression .)
    IF              reduce using rule 28 (expression -> expression GREATER expression .)
    {               reduce using rule 28 (expression -> expression GREATER expression .)
    ID              reduce using rule 28 (expression -> expression GREATER expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64

  ! +               [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! -               [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! *               [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! /               [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! DOTADD          [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! DOTSUB          [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! DOTMUL          [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! DOTDIV          [ reduce using rule 28 (expression -> expression GREATER expression .) ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! '               [ shift and go to state 65 ]


state 94

    (29) expression -> expression LESSEQ expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 29 (expression -> expression LESSEQ expression .)
    EQ              reduce using rule 29 (expression -> expression LESSEQ expression .)
    NOTEQ           reduce using rule 29 (expression -> expression LESSEQ expression .)
    LESS            reduce using rule 29 (expression -> expression LESSEQ expression .)
    GREATER         reduce using rule 29 (expression -> expression LESSEQ expression .)
    LESSEQ          reduce using rule 29 (expression -> expression LESSEQ expression .)
    GREATEREQ       reduce using rule 29 (expression -> expression LESSEQ expression .)
    '               reduce using rule 29 (expression -> expression LESSEQ expression .)
    ,               reduce using rule 29 (expression -> expression LESSEQ expression .)
    )               reduce using rule 29 (expression -> expression LESSEQ expression .)
    "               reduce using rule 29 (expression -> expression LESSEQ expression .)
    ]               reduce using rule 29 (expression -> expression LESSEQ expression .)
    :               reduce using rule 29 (expression -> expression LESSEQ expression .)
    RETURN          reduce using rule 29 (expression -> expression LESSEQ expression .)
    BREAK           reduce using rule 29 (expression -> expression LESSEQ expression .)
    CONTINUE        reduce using rule 29 (expression -> expression LESSEQ expression .)
    PRINT           reduce using rule 29 (expression -> expression LESSEQ expression .)
    WHILE           reduce using rule 29 (expression -> expression LESSEQ expression .)
    FOR             reduce using rule 29 (expression -> expression LESSEQ expression .)
    IF              reduce using rule 29 (expression -> expression LESSEQ expression .)
    {               reduce using rule 29 (expression -> expression LESSEQ expression .)
    ID              reduce using rule 29 (expression -> expression LESSEQ expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64

  ! +               [ reduce using rule 29 (expression -> expression LESSEQ expression .) ]
  ! -               [ reduce using rule 29 (expression -> expression LESSEQ expression .) ]
  ! *               [ reduce using rule 29 (expression -> expression LESSEQ expression .) ]
  ! /               [ reduce using rule 29 (expression -> expression LESSEQ expression .) ]
  ! DOTADD          [ reduce using rule 29 (expression -> expression LESSEQ expression .) ]
  ! DOTSUB          [ reduce using rule 29 (expression -> expression LESSEQ expression .) ]
  ! DOTMUL          [ reduce using rule 29 (expression -> expression LESSEQ expression .) ]
  ! DOTDIV          [ reduce using rule 29 (expression -> expression LESSEQ expression .) ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! '               [ shift and go to state 65 ]


state 95

    (30) expression -> expression GREATEREQ expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 30 (expression -> expression GREATEREQ expression .)
    EQ              reduce using rule 30 (expression -> expression GREATEREQ expression .)
    NOTEQ           reduce using rule 30 (expression -> expression GREATEREQ expression .)
    LESS            reduce using rule 30 (expression -> expression GREATEREQ expression .)
    GREATER         reduce using rule 30 (expression -> expression GREATEREQ expression .)
    LESSEQ          reduce using rule 30 (expression -> expression GREATEREQ expression .)
    GREATEREQ       reduce using rule 30 (expression -> expression GREATEREQ expression .)
    '               reduce using rule 30 (expression -> expression GREATEREQ expression .)
    ,               reduce using rule 30 (expression -> expression GREATEREQ expression .)
    )               reduce using rule 30 (expression -> expression GREATEREQ expression .)
    "               reduce using rule 30 (expression -> expression GREATEREQ expression .)
    ]               reduce using rule 30 (expression -> expression GREATEREQ expression .)
    :               reduce using rule 30 (expression -> expression GREATEREQ expression .)
    RETURN          reduce using rule 30 (expression -> expression GREATEREQ expression .)
    BREAK           reduce using rule 30 (expression -> expression GREATEREQ expression .)
    CONTINUE        reduce using rule 30 (expression -> expression GREATEREQ expression .)
    PRINT           reduce using rule 30 (expression -> expression GREATEREQ expression .)
    WHILE           reduce using rule 30 (expression -> expression GREATEREQ expression .)
    FOR             reduce using rule 30 (expression -> expression GREATEREQ expression .)
    IF              reduce using rule 30 (expression -> expression GREATEREQ expression .)
    {               reduce using rule 30 (expression -> expression GREATEREQ expression .)
    ID              reduce using rule 30 (expression -> expression GREATEREQ expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64

  ! +               [ reduce using rule 30 (expression -> expression GREATEREQ expression .) ]
  ! -               [ reduce using rule 30 (expression -> expression GREATEREQ expression .) ]
  ! *               [ reduce using rule 30 (expression -> expression GREATEREQ expression .) ]
  ! /               [ reduce using rule 30 (expression -> expression GREATEREQ expression .) ]
  ! DOTADD          [ reduce using rule 30 (expression -> expression GREATEREQ expression .) ]
  ! DOTSUB          [ reduce using rule 30 (expression -> expression GREATEREQ expression .) ]
  ! DOTMUL          [ reduce using rule 30 (expression -> expression GREATEREQ expression .) ]
  ! DOTDIV          [ reduce using rule 30 (expression -> expression GREATEREQ expression .) ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! '               [ shift and go to state 65 ]


state 96

    (31) expression -> expression DOTADD expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 31 (expression -> expression DOTADD expression .)
    +               reduce using rule 31 (expression -> expression DOTADD expression .)
    -               reduce using rule 31 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 31 (expression -> expression DOTADD expression .)
    NOTEQ           reduce using rule 31 (expression -> expression DOTADD expression .)
    LESS            reduce using rule 31 (expression -> expression DOTADD expression .)
    GREATER         reduce using rule 31 (expression -> expression DOTADD expression .)
    LESSEQ          reduce using rule 31 (expression -> expression DOTADD expression .)
    GREATEREQ       reduce using rule 31 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 31 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 31 (expression -> expression DOTADD expression .)
    '               reduce using rule 31 (expression -> expression DOTADD expression .)
    ,               reduce using rule 31 (expression -> expression DOTADD expression .)
    )               reduce using rule 31 (expression -> expression DOTADD expression .)
    "               reduce using rule 31 (expression -> expression DOTADD expression .)
    ]               reduce using rule 31 (expression -> expression DOTADD expression .)
    :               reduce using rule 31 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 31 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 31 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 31 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 31 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 31 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 31 (expression -> expression DOTADD expression .)
    IF              reduce using rule 31 (expression -> expression DOTADD expression .)
    {               reduce using rule 31 (expression -> expression DOTADD expression .)
    ID              reduce using rule 31 (expression -> expression DOTADD expression .)
    *               shift and go to state 53
    /               shift and go to state 54
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64

  ! *               [ reduce using rule 31 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 31 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 31 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 31 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! '               [ shift and go to state 65 ]


state 97

    (32) expression -> expression DOTSUB expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 32 (expression -> expression DOTSUB expression .)
    +               reduce using rule 32 (expression -> expression DOTSUB expression .)
    -               reduce using rule 32 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 32 (expression -> expression DOTSUB expression .)
    NOTEQ           reduce using rule 32 (expression -> expression DOTSUB expression .)
    LESS            reduce using rule 32 (expression -> expression DOTSUB expression .)
    GREATER         reduce using rule 32 (expression -> expression DOTSUB expression .)
    LESSEQ          reduce using rule 32 (expression -> expression DOTSUB expression .)
    GREATEREQ       reduce using rule 32 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 32 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 32 (expression -> expression DOTSUB expression .)
    '               reduce using rule 32 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 32 (expression -> expression DOTSUB expression .)
    )               reduce using rule 32 (expression -> expression DOTSUB expression .)
    "               reduce using rule 32 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 32 (expression -> expression DOTSUB expression .)
    :               reduce using rule 32 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 32 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 32 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 32 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 32 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 32 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 32 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 32 (expression -> expression DOTSUB expression .)
    {               reduce using rule 32 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 32 (expression -> expression DOTSUB expression .)
    *               shift and go to state 53
    /               shift and go to state 54
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64

  ! *               [ reduce using rule 32 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 32 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 32 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 32 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! '               [ shift and go to state 65 ]


state 98

    (33) expression -> expression DOTMUL expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 33 (expression -> expression DOTMUL expression .)
    +               reduce using rule 33 (expression -> expression DOTMUL expression .)
    -               reduce using rule 33 (expression -> expression DOTMUL expression .)
    *               reduce using rule 33 (expression -> expression DOTMUL expression .)
    /               reduce using rule 33 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 33 (expression -> expression DOTMUL expression .)
    NOTEQ           reduce using rule 33 (expression -> expression DOTMUL expression .)
    LESS            reduce using rule 33 (expression -> expression DOTMUL expression .)
    GREATER         reduce using rule 33 (expression -> expression DOTMUL expression .)
    LESSEQ          reduce using rule 33 (expression -> expression DOTMUL expression .)
    GREATEREQ       reduce using rule 33 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 33 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 33 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 33 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 33 (expression -> expression DOTMUL expression .)
    '               reduce using rule 33 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 33 (expression -> expression DOTMUL expression .)
    )               reduce using rule 33 (expression -> expression DOTMUL expression .)
    "               reduce using rule 33 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 33 (expression -> expression DOTMUL expression .)
    :               reduce using rule 33 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 33 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 33 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 33 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 33 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 33 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 33 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 33 (expression -> expression DOTMUL expression .)
    {               reduce using rule 33 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 33 (expression -> expression DOTMUL expression .)

  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! '               [ shift and go to state 65 ]


state 99

    (34) expression -> expression DOTDIV expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 34 (expression -> expression DOTDIV expression .)
    +               reduce using rule 34 (expression -> expression DOTDIV expression .)
    -               reduce using rule 34 (expression -> expression DOTDIV expression .)
    *               reduce using rule 34 (expression -> expression DOTDIV expression .)
    /               reduce using rule 34 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 34 (expression -> expression DOTDIV expression .)
    NOTEQ           reduce using rule 34 (expression -> expression DOTDIV expression .)
    LESS            reduce using rule 34 (expression -> expression DOTDIV expression .)
    GREATER         reduce using rule 34 (expression -> expression DOTDIV expression .)
    LESSEQ          reduce using rule 34 (expression -> expression DOTDIV expression .)
    GREATEREQ       reduce using rule 34 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 34 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 34 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 34 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 34 (expression -> expression DOTDIV expression .)
    '               reduce using rule 34 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 34 (expression -> expression DOTDIV expression .)
    )               reduce using rule 34 (expression -> expression DOTDIV expression .)
    "               reduce using rule 34 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 34 (expression -> expression DOTDIV expression .)
    :               reduce using rule 34 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 34 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 34 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 34 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 34 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 34 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 34 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 34 (expression -> expression DOTDIV expression .)
    {               reduce using rule 34 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 34 (expression -> expression DOTDIV expression .)

  ! +               [ shift and go to state 51 ]
  ! -               [ shift and go to state 52 ]
  ! *               [ shift and go to state 53 ]
  ! /               [ shift and go to state 54 ]
  ! EQ              [ shift and go to state 55 ]
  ! NOTEQ           [ shift and go to state 56 ]
  ! LESS            [ shift and go to state 57 ]
  ! GREATER         [ shift and go to state 58 ]
  ! LESSEQ          [ shift and go to state 59 ]
  ! GREATEREQ       [ shift and go to state 60 ]
  ! DOTADD          [ shift and go to state 61 ]
  ! DOTSUB          [ shift and go to state 62 ]
  ! DOTMUL          [ shift and go to state 63 ]
  ! DOTDIV          [ shift and go to state 64 ]
  ! '               [ shift and go to state 65 ]


state 100

    (37) expression -> ZEROS ( expression . )
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    )               shift and go to state 117
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 101

    (56) expression -> ( expression ) .

    ;               reduce using rule 56 (expression -> ( expression ) .)
    +               reduce using rule 56 (expression -> ( expression ) .)
    -               reduce using rule 56 (expression -> ( expression ) .)
    *               reduce using rule 56 (expression -> ( expression ) .)
    /               reduce using rule 56 (expression -> ( expression ) .)
    EQ              reduce using rule 56 (expression -> ( expression ) .)
    NOTEQ           reduce using rule 56 (expression -> ( expression ) .)
    LESS            reduce using rule 56 (expression -> ( expression ) .)
    GREATER         reduce using rule 56 (expression -> ( expression ) .)
    LESSEQ          reduce using rule 56 (expression -> ( expression ) .)
    GREATEREQ       reduce using rule 56 (expression -> ( expression ) .)
    DOTADD          reduce using rule 56 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 56 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 56 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 56 (expression -> ( expression ) .)
    '               reduce using rule 56 (expression -> ( expression ) .)
    ,               reduce using rule 56 (expression -> ( expression ) .)
    )               reduce using rule 56 (expression -> ( expression ) .)
    "               reduce using rule 56 (expression -> ( expression ) .)
    ]               reduce using rule 56 (expression -> ( expression ) .)
    :               reduce using rule 56 (expression -> ( expression ) .)
    RETURN          reduce using rule 56 (expression -> ( expression ) .)
    BREAK           reduce using rule 56 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 56 (expression -> ( expression ) .)
    PRINT           reduce using rule 56 (expression -> ( expression ) .)
    WHILE           reduce using rule 56 (expression -> ( expression ) .)
    FOR             reduce using rule 56 (expression -> ( expression ) .)
    IF              reduce using rule 56 (expression -> ( expression ) .)
    {               reduce using rule 56 (expression -> ( expression ) .)
    ID              reduce using rule 56 (expression -> ( expression ) .)


state 102

    (38) expression -> ONES ( expression . )
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    )               shift and go to state 118
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 103

    (39) expression -> EYE ( expression . )
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    )               shift and go to state 119
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 104

    (59) expression_list -> expression_list , expression .
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ;               reduce using rule 59 (expression_list -> expression_list , expression .)
    ,               reduce using rule 59 (expression_list -> expression_list , expression .)
    "               reduce using rule 59 (expression_list -> expression_list , expression .)
    ]               reduce using rule 59 (expression_list -> expression_list , expression .)
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 105

    (18) print_instruction -> PRINT " expression_list " . ;

    ;               shift and go to state 120


state 106

    (46) while_instruction -> WHILE ( condition ) . instruction
    (4) instruction -> . return_instruction
    (5) instruction -> . break_instruction
    (6) instruction -> . continue_instruction
    (7) instruction -> . print_instruction
    (8) instruction -> . while_instruction
    (9) instruction -> . for_instruction
    (10) instruction -> . if_instruction
    (11) instruction -> . assignment_instruction
    (12) instruction -> . compound_assignment_instruction
    (13) instruction -> . compound_instruction
    (14) return_instruction -> . RETURN expression ;
    (15) break_instruction -> . BREAK ;
    (16) continue_instruction -> . CONTINUE ;
    (17) print_instruction -> . PRINT expression_list ;
    (18) print_instruction -> . PRINT " expression_list " ;
    (46) while_instruction -> . WHILE ( condition ) instruction
    (47) for_instruction -> . FOR variable_expression = expression : expression instruction
    (44) if_instruction -> . IF ( condition ) instruction
    (45) if_instruction -> . IF ( condition ) instruction ELSE instruction
    (19) assignment_instruction -> . variable_expression = expression ;
    (20) assignment_instruction -> . variable_expression = [ expression_lists ] ;
    (40) compound_assignment_instruction -> . variable_expression ADDASSIGN expression ;
    (41) compound_assignment_instruction -> . variable_expression SUBASSIGN expression ;
    (42) compound_assignment_instruction -> . variable_expression MULASSIGN expression ;
    (43) compound_assignment_instruction -> . variable_expression DIVASSIGN expression ;
    (48) compound_instruction -> . { instructions }
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    RETURN          shift and go to state 14
    BREAK           shift and go to state 15
    CONTINUE        shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    {               shift and go to state 22
    ID              shift and go to state 23

    instruction                    shift and go to state 121
    return_instruction             shift and go to state 4
    break_instruction              shift and go to state 5
    continue_instruction           shift and go to state 6
    print_instruction              shift and go to state 7
    while_instruction              shift and go to state 8
    for_instruction                shift and go to state 9
    if_instruction                 shift and go to state 10
    assignment_instruction         shift and go to state 11
    compound_assignment_instruction shift and go to state 12
    compound_instruction           shift and go to state 13
    variable_expression            shift and go to state 20

state 107

    (47) for_instruction -> FOR variable_expression = expression . : expression instruction
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    :               shift and go to state 122
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 108

    (19) assignment_instruction -> variable_expression = expression ; .

    RETURN          reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)
    BREAK           reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)
    CONTINUE        reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)
    PRINT           reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)
    WHILE           reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)
    FOR             reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)
    IF              reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)
    {               reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)
    ID              reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)
    $end            reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)
    }               reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)
    ELSE            reduce using rule 19 (assignment_instruction -> variable_expression = expression ; .)


state 109

    (20) assignment_instruction -> variable_expression = [ expression_lists . ] ;
    (57) expression_lists -> expression_lists . ; expression_list

    ]               shift and go to state 123
    ;               shift and go to state 124


state 110

    (58) expression_lists -> expression_list .
    (59) expression_list -> expression_list . , expression

    ]               reduce using rule 58 (expression_lists -> expression_list .)
    ;               reduce using rule 58 (expression_lists -> expression_list .)
    ,               shift and go to state 72


state 111

    (40) compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .

    RETURN          reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)
    BREAK           reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)
    CONTINUE        reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)
    PRINT           reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)
    WHILE           reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)
    FOR             reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)
    IF              reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)
    {               reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)
    ID              reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)
    $end            reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)
    }               reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)
    ELSE            reduce using rule 40 (compound_assignment_instruction -> variable_expression ADDASSIGN expression ; .)


state 112

    (41) compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .

    RETURN          reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)
    BREAK           reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)
    CONTINUE        reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)
    PRINT           reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)
    WHILE           reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)
    FOR             reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)
    IF              reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)
    {               reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)
    ID              reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)
    $end            reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)
    }               reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)
    ELSE            reduce using rule 41 (compound_assignment_instruction -> variable_expression SUBASSIGN expression ; .)


state 113

    (42) compound_assignment_instruction -> variable_expression MULASSIGN expression ; .

    RETURN          reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)
    BREAK           reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)
    CONTINUE        reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)
    PRINT           reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)
    WHILE           reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)
    FOR             reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)
    IF              reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)
    {               reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)
    ID              reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)
    $end            reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)
    }               reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)
    ELSE            reduce using rule 42 (compound_assignment_instruction -> variable_expression MULASSIGN expression ; .)


state 114

    (43) compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .

    RETURN          reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)
    BREAK           reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)
    CONTINUE        reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)
    PRINT           reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)
    WHILE           reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)
    FOR             reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)
    IF              reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)
    {               reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)
    ID              reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)
    $end            reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)
    }               reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)
    ELSE            reduce using rule 43 (compound_assignment_instruction -> variable_expression DIVASSIGN expression ; .)


state 115

    (44) if_instruction -> IF ( condition ) . instruction
    (45) if_instruction -> IF ( condition ) . instruction ELSE instruction
    (4) instruction -> . return_instruction
    (5) instruction -> . break_instruction
    (6) instruction -> . continue_instruction
    (7) instruction -> . print_instruction
    (8) instruction -> . while_instruction
    (9) instruction -> . for_instruction
    (10) instruction -> . if_instruction
    (11) instruction -> . assignment_instruction
    (12) instruction -> . compound_assignment_instruction
    (13) instruction -> . compound_instruction
    (14) return_instruction -> . RETURN expression ;
    (15) break_instruction -> . BREAK ;
    (16) continue_instruction -> . CONTINUE ;
    (17) print_instruction -> . PRINT expression_list ;
    (18) print_instruction -> . PRINT " expression_list " ;
    (46) while_instruction -> . WHILE ( condition ) instruction
    (47) for_instruction -> . FOR variable_expression = expression : expression instruction
    (44) if_instruction -> . IF ( condition ) instruction
    (45) if_instruction -> . IF ( condition ) instruction ELSE instruction
    (19) assignment_instruction -> . variable_expression = expression ;
    (20) assignment_instruction -> . variable_expression = [ expression_lists ] ;
    (40) compound_assignment_instruction -> . variable_expression ADDASSIGN expression ;
    (41) compound_assignment_instruction -> . variable_expression SUBASSIGN expression ;
    (42) compound_assignment_instruction -> . variable_expression MULASSIGN expression ;
    (43) compound_assignment_instruction -> . variable_expression DIVASSIGN expression ;
    (48) compound_instruction -> . { instructions }
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    RETURN          shift and go to state 14
    BREAK           shift and go to state 15
    CONTINUE        shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    {               shift and go to state 22
    ID              shift and go to state 23

    instruction                    shift and go to state 125
    return_instruction             shift and go to state 4
    break_instruction              shift and go to state 5
    continue_instruction           shift and go to state 6
    print_instruction              shift and go to state 7
    while_instruction              shift and go to state 8
    for_instruction                shift and go to state 9
    if_instruction                 shift and go to state 10
    assignment_instruction         shift and go to state 11
    compound_assignment_instruction shift and go to state 12
    compound_instruction           shift and go to state 13
    variable_expression            shift and go to state 20

state 116

    (55) variable_expression -> ID [ expression , . expression ]
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression                     shift and go to state 126
    variable_expression            shift and go to state 34

state 117

    (37) expression -> ZEROS ( expression ) .

    ;               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    +               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    -               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    *               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    /               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    EQ              reduce using rule 37 (expression -> ZEROS ( expression ) .)
    NOTEQ           reduce using rule 37 (expression -> ZEROS ( expression ) .)
    LESS            reduce using rule 37 (expression -> ZEROS ( expression ) .)
    GREATER         reduce using rule 37 (expression -> ZEROS ( expression ) .)
    LESSEQ          reduce using rule 37 (expression -> ZEROS ( expression ) .)
    GREATEREQ       reduce using rule 37 (expression -> ZEROS ( expression ) .)
    DOTADD          reduce using rule 37 (expression -> ZEROS ( expression ) .)
    DOTSUB          reduce using rule 37 (expression -> ZEROS ( expression ) .)
    DOTMUL          reduce using rule 37 (expression -> ZEROS ( expression ) .)
    DOTDIV          reduce using rule 37 (expression -> ZEROS ( expression ) .)
    '               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    ,               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    )               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    "               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    ]               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    :               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    RETURN          reduce using rule 37 (expression -> ZEROS ( expression ) .)
    BREAK           reduce using rule 37 (expression -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 37 (expression -> ZEROS ( expression ) .)
    PRINT           reduce using rule 37 (expression -> ZEROS ( expression ) .)
    WHILE           reduce using rule 37 (expression -> ZEROS ( expression ) .)
    FOR             reduce using rule 37 (expression -> ZEROS ( expression ) .)
    IF              reduce using rule 37 (expression -> ZEROS ( expression ) .)
    {               reduce using rule 37 (expression -> ZEROS ( expression ) .)
    ID              reduce using rule 37 (expression -> ZEROS ( expression ) .)


state 118

    (38) expression -> ONES ( expression ) .

    ;               reduce using rule 38 (expression -> ONES ( expression ) .)
    +               reduce using rule 38 (expression -> ONES ( expression ) .)
    -               reduce using rule 38 (expression -> ONES ( expression ) .)
    *               reduce using rule 38 (expression -> ONES ( expression ) .)
    /               reduce using rule 38 (expression -> ONES ( expression ) .)
    EQ              reduce using rule 38 (expression -> ONES ( expression ) .)
    NOTEQ           reduce using rule 38 (expression -> ONES ( expression ) .)
    LESS            reduce using rule 38 (expression -> ONES ( expression ) .)
    GREATER         reduce using rule 38 (expression -> ONES ( expression ) .)
    LESSEQ          reduce using rule 38 (expression -> ONES ( expression ) .)
    GREATEREQ       reduce using rule 38 (expression -> ONES ( expression ) .)
    DOTADD          reduce using rule 38 (expression -> ONES ( expression ) .)
    DOTSUB          reduce using rule 38 (expression -> ONES ( expression ) .)
    DOTMUL          reduce using rule 38 (expression -> ONES ( expression ) .)
    DOTDIV          reduce using rule 38 (expression -> ONES ( expression ) .)
    '               reduce using rule 38 (expression -> ONES ( expression ) .)
    ,               reduce using rule 38 (expression -> ONES ( expression ) .)
    )               reduce using rule 38 (expression -> ONES ( expression ) .)
    "               reduce using rule 38 (expression -> ONES ( expression ) .)
    ]               reduce using rule 38 (expression -> ONES ( expression ) .)
    :               reduce using rule 38 (expression -> ONES ( expression ) .)
    RETURN          reduce using rule 38 (expression -> ONES ( expression ) .)
    BREAK           reduce using rule 38 (expression -> ONES ( expression ) .)
    CONTINUE        reduce using rule 38 (expression -> ONES ( expression ) .)
    PRINT           reduce using rule 38 (expression -> ONES ( expression ) .)
    WHILE           reduce using rule 38 (expression -> ONES ( expression ) .)
    FOR             reduce using rule 38 (expression -> ONES ( expression ) .)
    IF              reduce using rule 38 (expression -> ONES ( expression ) .)
    {               reduce using rule 38 (expression -> ONES ( expression ) .)
    ID              reduce using rule 38 (expression -> ONES ( expression ) .)


state 119

    (39) expression -> EYE ( expression ) .

    ;               reduce using rule 39 (expression -> EYE ( expression ) .)
    +               reduce using rule 39 (expression -> EYE ( expression ) .)
    -               reduce using rule 39 (expression -> EYE ( expression ) .)
    *               reduce using rule 39 (expression -> EYE ( expression ) .)
    /               reduce using rule 39 (expression -> EYE ( expression ) .)
    EQ              reduce using rule 39 (expression -> EYE ( expression ) .)
    NOTEQ           reduce using rule 39 (expression -> EYE ( expression ) .)
    LESS            reduce using rule 39 (expression -> EYE ( expression ) .)
    GREATER         reduce using rule 39 (expression -> EYE ( expression ) .)
    LESSEQ          reduce using rule 39 (expression -> EYE ( expression ) .)
    GREATEREQ       reduce using rule 39 (expression -> EYE ( expression ) .)
    DOTADD          reduce using rule 39 (expression -> EYE ( expression ) .)
    DOTSUB          reduce using rule 39 (expression -> EYE ( expression ) .)
    DOTMUL          reduce using rule 39 (expression -> EYE ( expression ) .)
    DOTDIV          reduce using rule 39 (expression -> EYE ( expression ) .)
    '               reduce using rule 39 (expression -> EYE ( expression ) .)
    ,               reduce using rule 39 (expression -> EYE ( expression ) .)
    )               reduce using rule 39 (expression -> EYE ( expression ) .)
    "               reduce using rule 39 (expression -> EYE ( expression ) .)
    ]               reduce using rule 39 (expression -> EYE ( expression ) .)
    :               reduce using rule 39 (expression -> EYE ( expression ) .)
    RETURN          reduce using rule 39 (expression -> EYE ( expression ) .)
    BREAK           reduce using rule 39 (expression -> EYE ( expression ) .)
    CONTINUE        reduce using rule 39 (expression -> EYE ( expression ) .)
    PRINT           reduce using rule 39 (expression -> EYE ( expression ) .)
    WHILE           reduce using rule 39 (expression -> EYE ( expression ) .)
    FOR             reduce using rule 39 (expression -> EYE ( expression ) .)
    IF              reduce using rule 39 (expression -> EYE ( expression ) .)
    {               reduce using rule 39 (expression -> EYE ( expression ) .)
    ID              reduce using rule 39 (expression -> EYE ( expression ) .)


state 120

    (18) print_instruction -> PRINT " expression_list " ; .

    RETURN          reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)
    BREAK           reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)
    CONTINUE        reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)
    PRINT           reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)
    WHILE           reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)
    FOR             reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)
    IF              reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)
    {               reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)
    ID              reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)
    $end            reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)
    }               reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)
    ELSE            reduce using rule 18 (print_instruction -> PRINT " expression_list " ; .)


state 121

    (46) while_instruction -> WHILE ( condition ) instruction .

    RETURN          reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)
    BREAK           reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)
    CONTINUE        reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)
    PRINT           reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)
    WHILE           reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)
    FOR             reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)
    IF              reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)
    {               reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)
    ID              reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)
    $end            reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)
    }               reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)
    ELSE            reduce using rule 46 (while_instruction -> WHILE ( condition ) instruction .)


state 122

    (47) for_instruction -> FOR variable_expression = expression : . expression instruction
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    variable_expression            shift and go to state 34
    expression                     shift and go to state 127

state 123

    (20) assignment_instruction -> variable_expression = [ expression_lists ] . ;

    ;               shift and go to state 128


state 124

    (57) expression_lists -> expression_lists ; . expression_list
    (59) expression_list -> . expression_list , expression
    (60) expression_list -> . expression
    (21) expression -> . expression + expression
    (22) expression -> . expression - expression
    (23) expression -> . expression * expression
    (24) expression -> . expression / expression
    (25) expression -> . expression EQ expression
    (26) expression -> . expression NOTEQ expression
    (27) expression -> . expression LESS expression
    (28) expression -> . expression GREATER expression
    (29) expression -> . expression LESSEQ expression
    (30) expression -> . expression GREATEREQ expression
    (31) expression -> . expression DOTADD expression
    (32) expression -> . expression DOTSUB expression
    (33) expression -> . expression DOTMUL expression
    (34) expression -> . expression DOTDIV expression
    (35) expression -> . - expression
    (36) expression -> . expression '
    (37) expression -> . ZEROS ( expression )
    (38) expression -> . ONES ( expression )
    (39) expression -> . EYE ( expression )
    (50) expression -> . FLOATNUM
    (51) expression -> . INTNUM
    (52) expression -> . STRING
    (53) expression -> . variable_expression
    (56) expression -> . ( expression )
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    -               shift and go to state 26
    ZEROS           shift and go to state 27
    ONES            shift and go to state 29
    EYE             shift and go to state 30
    FLOATNUM        shift and go to state 31
    INTNUM          shift and go to state 32
    STRING          shift and go to state 33
    (               shift and go to state 28
    ID              shift and go to state 23

    expression_list                shift and go to state 129
    expression                     shift and go to state 39
    variable_expression            shift and go to state 34

state 125

    (44) if_instruction -> IF ( condition ) instruction .
    (45) if_instruction -> IF ( condition ) instruction . ELSE instruction

    RETURN          reduce using rule 44 (if_instruction -> IF ( condition ) instruction .)
    BREAK           reduce using rule 44 (if_instruction -> IF ( condition ) instruction .)
    CONTINUE        reduce using rule 44 (if_instruction -> IF ( condition ) instruction .)
    PRINT           reduce using rule 44 (if_instruction -> IF ( condition ) instruction .)
    WHILE           reduce using rule 44 (if_instruction -> IF ( condition ) instruction .)
    FOR             reduce using rule 44 (if_instruction -> IF ( condition ) instruction .)
    IF              reduce using rule 44 (if_instruction -> IF ( condition ) instruction .)
    {               reduce using rule 44 (if_instruction -> IF ( condition ) instruction .)
    ID              reduce using rule 44 (if_instruction -> IF ( condition ) instruction .)
    $end            reduce using rule 44 (if_instruction -> IF ( condition ) instruction .)
    }               reduce using rule 44 (if_instruction -> IF ( condition ) instruction .)
    ELSE            shift and go to state 130

  ! ELSE            [ reduce using rule 44 (if_instruction -> IF ( condition ) instruction .) ]


state 126

    (55) variable_expression -> ID [ expression , expression . ]
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '

    ]               shift and go to state 131
    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65


state 127

    (47) for_instruction -> FOR variable_expression = expression : expression . instruction
    (21) expression -> expression . + expression
    (22) expression -> expression . - expression
    (23) expression -> expression . * expression
    (24) expression -> expression . / expression
    (25) expression -> expression . EQ expression
    (26) expression -> expression . NOTEQ expression
    (27) expression -> expression . LESS expression
    (28) expression -> expression . GREATER expression
    (29) expression -> expression . LESSEQ expression
    (30) expression -> expression . GREATEREQ expression
    (31) expression -> expression . DOTADD expression
    (32) expression -> expression . DOTSUB expression
    (33) expression -> expression . DOTMUL expression
    (34) expression -> expression . DOTDIV expression
    (36) expression -> expression . '
    (4) instruction -> . return_instruction
    (5) instruction -> . break_instruction
    (6) instruction -> . continue_instruction
    (7) instruction -> . print_instruction
    (8) instruction -> . while_instruction
    (9) instruction -> . for_instruction
    (10) instruction -> . if_instruction
    (11) instruction -> . assignment_instruction
    (12) instruction -> . compound_assignment_instruction
    (13) instruction -> . compound_instruction
    (14) return_instruction -> . RETURN expression ;
    (15) break_instruction -> . BREAK ;
    (16) continue_instruction -> . CONTINUE ;
    (17) print_instruction -> . PRINT expression_list ;
    (18) print_instruction -> . PRINT " expression_list " ;
    (46) while_instruction -> . WHILE ( condition ) instruction
    (47) for_instruction -> . FOR variable_expression = expression : expression instruction
    (44) if_instruction -> . IF ( condition ) instruction
    (45) if_instruction -> . IF ( condition ) instruction ELSE instruction
    (19) assignment_instruction -> . variable_expression = expression ;
    (20) assignment_instruction -> . variable_expression = [ expression_lists ] ;
    (40) compound_assignment_instruction -> . variable_expression ADDASSIGN expression ;
    (41) compound_assignment_instruction -> . variable_expression SUBASSIGN expression ;
    (42) compound_assignment_instruction -> . variable_expression MULASSIGN expression ;
    (43) compound_assignment_instruction -> . variable_expression DIVASSIGN expression ;
    (48) compound_instruction -> . { instructions }
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    +               shift and go to state 51
    -               shift and go to state 52
    *               shift and go to state 53
    /               shift and go to state 54
    EQ              shift and go to state 55
    NOTEQ           shift and go to state 56
    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    LESSEQ          shift and go to state 59
    GREATEREQ       shift and go to state 60
    DOTADD          shift and go to state 61
    DOTSUB          shift and go to state 62
    DOTMUL          shift and go to state 63
    DOTDIV          shift and go to state 64
    '               shift and go to state 65
    RETURN          shift and go to state 14
    BREAK           shift and go to state 15
    CONTINUE        shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    {               shift and go to state 22
    ID              shift and go to state 23

    variable_expression            shift and go to state 20
    instruction                    shift and go to state 132
    return_instruction             shift and go to state 4
    break_instruction              shift and go to state 5
    continue_instruction           shift and go to state 6
    print_instruction              shift and go to state 7
    while_instruction              shift and go to state 8
    for_instruction                shift and go to state 9
    if_instruction                 shift and go to state 10
    assignment_instruction         shift and go to state 11
    compound_assignment_instruction shift and go to state 12
    compound_instruction           shift and go to state 13

state 128

    (20) assignment_instruction -> variable_expression = [ expression_lists ] ; .

    RETURN          reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)
    BREAK           reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)
    CONTINUE        reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)
    PRINT           reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)
    WHILE           reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)
    FOR             reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)
    IF              reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)
    {               reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)
    ID              reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)
    $end            reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)
    }               reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)
    ELSE            reduce using rule 20 (assignment_instruction -> variable_expression = [ expression_lists ] ; .)


state 129

    (57) expression_lists -> expression_lists ; expression_list .
    (59) expression_list -> expression_list . , expression

    ]               reduce using rule 57 (expression_lists -> expression_lists ; expression_list .)
    ;               reduce using rule 57 (expression_lists -> expression_lists ; expression_list .)
    ,               shift and go to state 72


state 130

    (45) if_instruction -> IF ( condition ) instruction ELSE . instruction
    (4) instruction -> . return_instruction
    (5) instruction -> . break_instruction
    (6) instruction -> . continue_instruction
    (7) instruction -> . print_instruction
    (8) instruction -> . while_instruction
    (9) instruction -> . for_instruction
    (10) instruction -> . if_instruction
    (11) instruction -> . assignment_instruction
    (12) instruction -> . compound_assignment_instruction
    (13) instruction -> . compound_instruction
    (14) return_instruction -> . RETURN expression ;
    (15) break_instruction -> . BREAK ;
    (16) continue_instruction -> . CONTINUE ;
    (17) print_instruction -> . PRINT expression_list ;
    (18) print_instruction -> . PRINT " expression_list " ;
    (46) while_instruction -> . WHILE ( condition ) instruction
    (47) for_instruction -> . FOR variable_expression = expression : expression instruction
    (44) if_instruction -> . IF ( condition ) instruction
    (45) if_instruction -> . IF ( condition ) instruction ELSE instruction
    (19) assignment_instruction -> . variable_expression = expression ;
    (20) assignment_instruction -> . variable_expression = [ expression_lists ] ;
    (40) compound_assignment_instruction -> . variable_expression ADDASSIGN expression ;
    (41) compound_assignment_instruction -> . variable_expression SUBASSIGN expression ;
    (42) compound_assignment_instruction -> . variable_expression MULASSIGN expression ;
    (43) compound_assignment_instruction -> . variable_expression DIVASSIGN expression ;
    (48) compound_instruction -> . { instructions }
    (54) variable_expression -> . ID
    (55) variable_expression -> . ID [ expression , expression ]

    RETURN          shift and go to state 14
    BREAK           shift and go to state 15
    CONTINUE        shift and go to state 16
    PRINT           shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 21
    {               shift and go to state 22
    ID              shift and go to state 23

    instruction                    shift and go to state 133
    return_instruction             shift and go to state 4
    break_instruction              shift and go to state 5
    continue_instruction           shift and go to state 6
    print_instruction              shift and go to state 7
    while_instruction              shift and go to state 8
    for_instruction                shift and go to state 9
    if_instruction                 shift and go to state 10
    assignment_instruction         shift and go to state 11
    compound_assignment_instruction shift and go to state 12
    compound_instruction           shift and go to state 13
    variable_expression            shift and go to state 20

state 131

    (55) variable_expression -> ID [ expression , expression ] .

    =               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    ADDASSIGN       reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    SUBASSIGN       reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    MULASSIGN       reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    DIVASSIGN       reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    ;               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    +               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    -               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    *               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    /               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    EQ              reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    NOTEQ           reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    LESS            reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    GREATER         reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    LESSEQ          reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    GREATEREQ       reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    DOTADD          reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    DOTSUB          reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    DOTMUL          reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    DOTDIV          reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    '               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    ,               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    )               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    "               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    ]               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    :               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    RETURN          reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    BREAK           reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    CONTINUE        reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    PRINT           reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    WHILE           reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    FOR             reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    IF              reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    {               reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)
    ID              reduce using rule 55 (variable_expression -> ID [ expression , expression ] .)


state 132

    (47) for_instruction -> FOR variable_expression = expression : expression instruction .

    RETURN          reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)
    BREAK           reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)
    CONTINUE        reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)
    PRINT           reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)
    WHILE           reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)
    FOR             reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)
    IF              reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)
    {               reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)
    ID              reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)
    $end            reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)
    }               reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)
    ELSE            reduce using rule 47 (for_instruction -> FOR variable_expression = expression : expression instruction .)


state 133

    (45) if_instruction -> IF ( condition ) instruction ELSE instruction .

    RETURN          reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)
    BREAK           reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)
    PRINT           reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)
    WHILE           reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)
    FOR             reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)
    IF              reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)
    {               reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)
    ID              reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)
    $end            reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)
    }               reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)
    ELSE            reduce using rule 45 (if_instruction -> IF ( condition ) instruction ELSE instruction .)

