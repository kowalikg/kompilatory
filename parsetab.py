
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFnonassocELSEright=nonassocADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNnonassocLESSGREATERLESSEQGREATEREQEQNOTEQleft+-DOTADDDOTSUBleft*/DOTMULDOTDIVrightNEGATIONADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GREATER GREATEREQ ID IF INTNUM LESS LESSEQ MULASSIGN NOTEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructionsinstructions : instructions instruction\n                        | instruction instruction :  return_instruction\n                    | break_instruction\n                    | continue_instruction\n                    | print_instruction\n                    | while_instruction\n                    | for_instruction\n                    | if_instruction\n                    | assignment_instruction\n                    | compound_assignment_instruction\n                    | compound_instruction\n\n        return_instruction : RETURN expression \';\' break_instruction : BREAK \';\' continue_instruction : CONTINUE \';\' print_instruction :    PRINT expression_list \';\'\n                                | PRINT \'"\' expression_list \'"\' \';\'\n        assignment_instruction : variable_expression \'=\' expression \';\' assignment_instruction : variable_expression \'=\' \'[\' expression_lists \']\' \';\'expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression EQ expression\n                  | expression NOTEQ expression\n                  | expression LESS expression\n                  | expression GREATER expression\n                  | expression LESSEQ expression\n                  | expression GREATEREQ expression\n                  | expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expression\n\n        expression : \'-\' expression %prec NEGATION expression : expression "\'" expression : ZEROS \'(\' expression \')\'expression : ONES \'(\' expression \')\'expression : EYE \'(\' expression \')\'compound_assignment_instruction : variable_expression ADDASSIGN expression \';\'\n                            | variable_expression SUBASSIGN expression \';\'\n                            | variable_expression MULASSIGN expression \';\'\n                            | variable_expression DIVASSIGN expression \';\'\n                            if_instruction : IF \'(\' condition \')\' instruction %prec IF\n                          | IF \'(\' condition \')\' instruction ELSE instructionwhile_instruction : WHILE \'(\' condition \')\' instructionfor_instruction : FOR variable_expression \'=\' expression \':\' expression  instruction compound_instruction : \'{\' instructions \'}\' condition : expressionexpression : FLOATNUM\n                      | INTNUM\n                      | STRING\n        expression : variable_expressionvariable_expression : ID\n                                | ID \'[\' expression \',\' expression \']\'expression : \'(\' expression \')\'expression_lists : expression_lists \';\' expression_list\n                            | expression_list expression_list : expression_list \',\' expression\n                           | expression '
    
_lr_action_items = {'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,23,24,31,32,33,34,35,36,48,50,65,66,71,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,106,108,111,112,113,114,115,117,118,119,120,121,125,127,128,130,131,132,133,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,14,-54,-2,-50,-51,-52,-53,-15,-16,14,-14,-36,-35,-17,-48,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,14,-19,-40,-41,-42,-43,14,-37,-38,-39,-18,-46,-44,14,-20,14,-55,-47,-45,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,23,24,31,32,33,34,35,36,48,50,65,66,71,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,106,108,111,112,113,114,115,117,118,119,120,121,125,127,128,130,131,132,133,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,15,-54,-2,-50,-51,-52,-53,-15,-16,15,-14,-36,-35,-17,-48,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,15,-19,-40,-41,-42,-43,15,-37,-38,-39,-18,-46,-44,15,-20,15,-55,-47,-45,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,23,24,31,32,33,34,35,36,48,50,65,66,71,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,106,108,111,112,113,114,115,117,118,119,120,121,125,127,128,130,131,132,133,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,16,-54,-2,-50,-51,-52,-53,-15,-16,16,-14,-36,-35,-17,-48,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,16,-19,-40,-41,-42,-43,16,-37,-38,-39,-18,-46,-44,16,-20,16,-55,-47,-45,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,23,24,31,32,33,34,35,36,48,50,65,66,71,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,106,108,111,112,113,114,115,117,118,119,120,121,125,127,128,130,131,132,133,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,17,-54,-2,-50,-51,-52,-53,-15,-16,17,-14,-36,-35,-17,-48,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,17,-19,-40,-41,-42,-43,17,-37,-38,-39,-18,-46,-44,17,-20,17,-55,-47,-45,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,23,24,31,32,33,34,35,36,48,50,65,66,71,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,106,108,111,112,113,114,115,117,118,119,120,121,125,127,128,130,131,132,133,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,18,-54,-2,-50,-51,-52,-53,-15,-16,18,-14,-36,-35,-17,-48,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,18,-19,-40,-41,-42,-43,18,-37,-38,-39,-18,-46,-44,18,-20,18,-55,-47,-45,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,23,24,31,32,33,34,35,36,48,50,65,66,71,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,106,108,111,112,113,114,115,117,118,119,120,121,125,127,128,130,131,132,133,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,19,-54,-2,-50,-51,-52,-53,-15,-16,19,-14,-36,-35,-17,-48,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,19,-19,-40,-41,-42,-43,19,-37,-38,-39,-18,-46,-44,19,-20,19,-55,-47,-45,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,23,24,31,32,33,34,35,36,48,50,65,66,71,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,106,108,111,112,113,114,115,117,118,119,120,121,125,127,128,130,131,132,133,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,21,-54,-2,-50,-51,-52,-53,-15,-16,21,-14,-36,-35,-17,-48,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,21,-19,-40,-41,-42,-43,21,-37,-38,-39,-18,-46,-44,21,-20,21,-55,-47,-45,]),'{':([0,2,3,4,5,6,7,8,9,10,11,12,13,22,23,24,31,32,33,34,35,36,48,50,65,66,71,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,106,108,111,112,113,114,115,117,118,119,120,121,125,127,128,130,131,132,133,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,22,-54,-2,-50,-51,-52,-53,-15,-16,22,-14,-36,-35,-17,-48,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,22,-19,-40,-41,-42,-43,22,-37,-38,-39,-18,-46,-44,22,-20,22,-55,-47,-45,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,19,22,23,24,26,28,31,32,33,34,35,36,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,76,78,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,106,108,111,112,113,114,115,116,117,118,119,120,121,122,124,125,127,128,130,131,132,133,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,23,23,23,23,-54,-2,23,23,-50,-51,-52,-53,-15,-16,23,23,23,23,23,23,23,23,23,23,-14,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-36,-35,23,23,23,-17,23,23,23,-48,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,23,-19,-40,-41,-42,-43,23,23,-37,-38,-39,-18,-46,23,23,-44,23,-20,23,-55,-47,-45,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,24,35,36,50,71,84,108,111,112,113,114,120,121,125,128,132,133,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-15,-16,-14,-17,-48,-19,-40,-41,-42,-43,-18,-46,-44,-20,-47,-45,]),'}':([3,4,5,6,7,8,9,10,11,12,13,24,35,36,48,50,71,84,108,111,112,113,114,120,121,125,128,132,133,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-15,-16,84,-14,-17,-48,-19,-40,-41,-42,-43,-18,-46,-44,-20,-47,-45,]),'ELSE':([4,5,6,7,8,9,10,11,12,13,35,36,50,71,84,108,111,112,113,114,120,121,125,128,132,133,],[-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,-16,-14,-17,-48,-19,-40,-41,-42,-43,-18,-46,130,-20,-47,-45,]),'-':([14,17,23,25,26,28,31,32,33,34,38,39,40,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,75,76,77,78,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,116,117,118,119,122,124,126,127,131,],[26,26,-54,52,26,26,-50,-51,-52,-53,26,52,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-36,-35,26,52,26,26,26,52,26,52,26,52,52,52,52,52,-21,-22,-23,-24,52,52,52,52,52,52,-31,-32,-33,-34,52,-56,52,52,52,52,26,-37,-38,-39,26,26,52,52,-55,]),'ZEROS':([14,17,26,28,38,40,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,72,76,78,116,122,124,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ONES':([14,17,26,28,38,40,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,72,76,78,116,122,124,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'EYE':([14,17,26,28,38,40,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,72,76,78,116,122,124,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'FLOATNUM':([14,17,26,28,38,40,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,72,76,78,116,122,124,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'INTNUM':([14,17,26,28,38,40,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,72,76,78,116,122,124,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'STRING':([14,17,26,28,38,40,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,72,76,78,116,122,124,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'(':([14,17,18,21,26,27,28,29,30,38,40,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,72,76,78,116,122,124,],[28,28,40,47,28,67,28,69,70,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),';':([15,16,23,25,31,32,33,34,37,39,65,66,77,79,80,81,82,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,104,105,109,110,117,118,119,123,129,131,],[35,36,-54,50,-50,-51,-52,-53,71,-60,-36,-35,108,111,112,113,114,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,-59,120,124,-58,-37,-38,-39,128,-57,-55,]),'"':([17,23,31,32,33,34,39,65,66,73,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,104,117,118,119,131,],[38,-54,-50,-51,-52,-53,-60,-36,-35,105,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,-59,-37,-38,-39,-55,]),'=':([20,23,41,131,],[42,-54,76,-55,]),'ADDASSIGN':([20,23,131,],[43,-54,-55,]),'SUBASSIGN':([20,23,131,],[44,-54,-55,]),'MULASSIGN':([20,23,131,],[45,-54,-55,]),'DIVASSIGN':([20,23,131,],[46,-54,-55,]),'+':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,51,-50,-51,-52,-53,51,-36,-35,51,51,51,51,51,51,51,51,-21,-22,-23,-24,51,51,51,51,51,51,-31,-32,-33,-34,51,-56,51,51,51,51,-37,-38,-39,51,51,-55,]),'*':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,53,-50,-51,-52,-53,53,-36,-35,53,53,53,53,53,53,53,53,53,53,-23,-24,53,53,53,53,53,53,53,53,-33,-34,53,-56,53,53,53,53,-37,-38,-39,53,53,-55,]),'/':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,54,-50,-51,-52,-53,54,-36,-35,54,54,54,54,54,54,54,54,54,54,-23,-24,54,54,54,54,54,54,54,54,-33,-34,54,-56,54,54,54,54,-37,-38,-39,54,54,-55,]),'EQ':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,55,-50,-51,-52,-53,55,-36,-35,55,55,55,55,55,55,55,55,-21,-22,-23,-24,None,None,None,None,None,None,-31,-32,-33,-34,55,-56,55,55,55,55,-37,-38,-39,55,55,-55,]),'NOTEQ':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,56,-50,-51,-52,-53,56,-36,-35,56,56,56,56,56,56,56,56,-21,-22,-23,-24,None,None,None,None,None,None,-31,-32,-33,-34,56,-56,56,56,56,56,-37,-38,-39,56,56,-55,]),'LESS':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,57,-50,-51,-52,-53,57,-36,-35,57,57,57,57,57,57,57,57,-21,-22,-23,-24,None,None,None,None,None,None,-31,-32,-33,-34,57,-56,57,57,57,57,-37,-38,-39,57,57,-55,]),'GREATER':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,58,-50,-51,-52,-53,58,-36,-35,58,58,58,58,58,58,58,58,-21,-22,-23,-24,None,None,None,None,None,None,-31,-32,-33,-34,58,-56,58,58,58,58,-37,-38,-39,58,58,-55,]),'LESSEQ':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,59,-50,-51,-52,-53,59,-36,-35,59,59,59,59,59,59,59,59,-21,-22,-23,-24,None,None,None,None,None,None,-31,-32,-33,-34,59,-56,59,59,59,59,-37,-38,-39,59,59,-55,]),'GREATEREQ':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,60,-50,-51,-52,-53,60,-36,-35,60,60,60,60,60,60,60,60,-21,-22,-23,-24,None,None,None,None,None,None,-31,-32,-33,-34,60,-56,60,60,60,60,-37,-38,-39,60,60,-55,]),'DOTADD':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,61,-50,-51,-52,-53,61,-36,-35,61,61,61,61,61,61,61,61,-21,-22,-23,-24,61,61,61,61,61,61,-31,-32,-33,-34,61,-56,61,61,61,61,-37,-38,-39,61,61,-55,]),'DOTSUB':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,62,-50,-51,-52,-53,62,-36,-35,62,62,62,62,62,62,62,62,-21,-22,-23,-24,62,62,62,62,62,62,-31,-32,-33,-34,62,-56,62,62,62,62,-37,-38,-39,62,62,-55,]),'DOTMUL':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,63,-50,-51,-52,-53,63,-36,-35,63,63,63,63,63,63,63,63,63,63,-23,-24,63,63,63,63,63,63,63,63,-33,-34,63,-56,63,63,63,63,-37,-38,-39,63,63,-55,]),'DOTDIV':([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,64,-50,-51,-52,-53,64,-36,-35,64,64,64,64,64,64,64,64,64,64,-23,-24,64,64,64,64,64,64,64,64,-33,-34,64,-56,64,64,64,64,-37,-38,-39,64,64,-55,]),"'":([23,25,31,32,33,34,39,65,66,68,75,77,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,117,118,119,126,127,131,],[-54,65,-50,-51,-52,-53,65,-36,-35,65,65,65,65,65,65,65,65,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,65,-56,65,65,65,65,-37,-38,-39,65,65,-55,]),',':([23,31,32,33,34,37,39,65,66,73,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,104,110,117,118,119,129,131,],[-54,-50,-51,-52,-53,72,-60,-36,-35,72,116,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,-59,72,-37,-38,-39,72,-55,]),')':([23,31,32,33,34,65,66,68,74,75,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,117,118,119,131,],[-54,-50,-51,-52,-53,-36,-35,101,106,-49,115,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,117,-56,118,119,-37,-38,-39,-55,]),']':([23,31,32,33,34,39,65,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,104,109,110,117,118,119,126,129,131,],[-54,-50,-51,-52,-53,-60,-36,-35,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,-59,123,-58,-37,-38,-39,131,-57,-55,]),':':([23,31,32,33,34,65,66,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,107,117,118,119,131,],[-54,-50,-51,-52,-53,-36,-35,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-56,122,-37,-38,-39,-55,]),'[':([23,42,],[49,78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions':([0,22,],[2,48,]),'instruction':([0,2,22,48,106,115,127,130,],[3,24,3,24,121,125,132,133,]),'return_instruction':([0,2,22,48,106,115,127,130,],[4,4,4,4,4,4,4,4,]),'break_instruction':([0,2,22,48,106,115,127,130,],[5,5,5,5,5,5,5,5,]),'continue_instruction':([0,2,22,48,106,115,127,130,],[6,6,6,6,6,6,6,6,]),'print_instruction':([0,2,22,48,106,115,127,130,],[7,7,7,7,7,7,7,7,]),'while_instruction':([0,2,22,48,106,115,127,130,],[8,8,8,8,8,8,8,8,]),'for_instruction':([0,2,22,48,106,115,127,130,],[9,9,9,9,9,9,9,9,]),'if_instruction':([0,2,22,48,106,115,127,130,],[10,10,10,10,10,10,10,10,]),'assignment_instruction':([0,2,22,48,106,115,127,130,],[11,11,11,11,11,11,11,11,]),'compound_assignment_instruction':([0,2,22,48,106,115,127,130,],[12,12,12,12,12,12,12,12,]),'compound_instruction':([0,2,22,48,106,115,127,130,],[13,13,13,13,13,13,13,13,]),'variable_expression':([0,2,14,17,19,22,26,28,38,40,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,72,76,78,106,115,116,122,124,127,130,],[20,20,34,34,41,20,34,34,34,34,34,34,34,34,34,34,20,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,20,20,34,34,34,20,20,]),'expression':([14,17,26,28,38,40,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,72,76,78,116,122,124,],[25,39,66,68,39,75,77,79,80,81,82,75,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,107,39,126,127,39,]),'expression_list':([17,38,78,124,],[37,73,110,129,]),'condition':([40,47,],[74,83,]),'expression_lists':([78,],[109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions','program',1,'p_program','Mparser.py',31),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',36),
  ('instructions -> instruction','instructions',1,'p_instructions','Mparser.py',37),
  ('instruction -> return_instruction','instruction',1,'p_instruction','Mparser.py',46),
  ('instruction -> break_instruction','instruction',1,'p_instruction','Mparser.py',47),
  ('instruction -> continue_instruction','instruction',1,'p_instruction','Mparser.py',48),
  ('instruction -> print_instruction','instruction',1,'p_instruction','Mparser.py',49),
  ('instruction -> while_instruction','instruction',1,'p_instruction','Mparser.py',50),
  ('instruction -> for_instruction','instruction',1,'p_instruction','Mparser.py',51),
  ('instruction -> if_instruction','instruction',1,'p_instruction','Mparser.py',52),
  ('instruction -> assignment_instruction','instruction',1,'p_instruction','Mparser.py',53),
  ('instruction -> compound_assignment_instruction','instruction',1,'p_instruction','Mparser.py',54),
  ('instruction -> compound_instruction','instruction',1,'p_instruction','Mparser.py',55),
  ('return_instruction -> RETURN expression ;','return_instruction',3,'p_return_instruction','Mparser.py',62),
  ('break_instruction -> BREAK ;','break_instruction',2,'p_break_instruction','Mparser.py',66),
  ('continue_instruction -> CONTINUE ;','continue_instruction',2,'p_continue_instr','Mparser.py',71),
  ('print_instruction -> PRINT expression_list ;','print_instruction',3,'p_print_instruction','Mparser.py',75),
  ('print_instruction -> PRINT " expression_list " ;','print_instruction',5,'p_print_instruction','Mparser.py',76),
  ('assignment_instruction -> variable_expression = expression ;','assignment_instruction',4,'p_assignment_instruction','Mparser.py',85),
  ('assignment_instruction -> variable_expression = [ expression_lists ] ;','assignment_instruction',6,'p_matrix_assignment','Mparser.py',89),
  ('expression -> expression + expression','expression',3,'p_binary_expression','Mparser.py',93),
  ('expression -> expression - expression','expression',3,'p_binary_expression','Mparser.py',94),
  ('expression -> expression * expression','expression',3,'p_binary_expression','Mparser.py',95),
  ('expression -> expression / expression','expression',3,'p_binary_expression','Mparser.py',96),
  ('expression -> expression EQ expression','expression',3,'p_binary_expression','Mparser.py',97),
  ('expression -> expression NOTEQ expression','expression',3,'p_binary_expression','Mparser.py',98),
  ('expression -> expression LESS expression','expression',3,'p_binary_expression','Mparser.py',99),
  ('expression -> expression GREATER expression','expression',3,'p_binary_expression','Mparser.py',100),
  ('expression -> expression LESSEQ expression','expression',3,'p_binary_expression','Mparser.py',101),
  ('expression -> expression GREATEREQ expression','expression',3,'p_binary_expression','Mparser.py',102),
  ('expression -> expression DOTADD expression','expression',3,'p_binary_expression','Mparser.py',103),
  ('expression -> expression DOTSUB expression','expression',3,'p_binary_expression','Mparser.py',104),
  ('expression -> expression DOTMUL expression','expression',3,'p_binary_expression','Mparser.py',105),
  ('expression -> expression DOTDIV expression','expression',3,'p_binary_expression','Mparser.py',106),
  ('expression -> - expression','expression',2,'p_neg_unary_expression','Mparser.py',112),
  ("expression -> expression '",'expression',2,'p_trans_unary_expression','Mparser.py',117),
  ('expression -> ZEROS ( expression )','expression',4,'p_matrix_initialization_zeros','Mparser.py',122),
  ('expression -> ONES ( expression )','expression',4,'p_matrix_initialization_ones','Mparser.py',127),
  ('expression -> EYE ( expression )','expression',4,'p_matrix_initialization_eye','Mparser.py',132),
  ('compound_assignment_instruction -> variable_expression ADDASSIGN expression ;','compound_assignment_instruction',4,'p_compound_assignment','Mparser.py',137),
  ('compound_assignment_instruction -> variable_expression SUBASSIGN expression ;','compound_assignment_instruction',4,'p_compound_assignment','Mparser.py',138),
  ('compound_assignment_instruction -> variable_expression MULASSIGN expression ;','compound_assignment_instruction',4,'p_compound_assignment','Mparser.py',139),
  ('compound_assignment_instruction -> variable_expression DIVASSIGN expression ;','compound_assignment_instruction',4,'p_compound_assignment','Mparser.py',140),
  ('if_instruction -> IF ( condition ) instruction','if_instruction',5,'p_if_instruction','Mparser.py',145),
  ('if_instruction -> IF ( condition ) instruction ELSE instruction','if_instruction',7,'p_if_instruction','Mparser.py',146),
  ('while_instruction -> WHILE ( condition ) instruction','while_instruction',5,'p_while_instruction','Mparser.py',153),
  ('for_instruction -> FOR variable_expression = expression : expression instruction','for_instruction',7,'p_for_instruction','Mparser.py',157),
  ('compound_instruction -> { instructions }','compound_instruction',3,'p_compound_instruction','Mparser.py',161),
  ('condition -> expression','condition',1,'p_condition','Mparser.py',165),
  ('expression -> FLOATNUM','expression',1,'p_constant','Mparser.py',169),
  ('expression -> INTNUM','expression',1,'p_constant','Mparser.py',170),
  ('expression -> STRING','expression',1,'p_constant','Mparser.py',171),
  ('expression -> variable_expression','expression',1,'p_variable_expression','Mparser.py',177),
  ('variable_expression -> ID','variable_expression',1,'p_ID','Mparser.py',181),
  ('variable_expression -> ID [ expression , expression ]','variable_expression',6,'p_ID','Mparser.py',182),
  ('expression -> ( expression )','expression',3,'p_paren_expression','Mparser.py',189),
  ('expression_lists -> expression_lists ; expression_list','expression_lists',3,'p_expression_lists','Mparser.py',193),
  ('expression_lists -> expression_list','expression_lists',1,'p_expression_lists','Mparser.py',194),
  ('expression_list -> expression_list , expression','expression_list',3,'p_expression_list','Mparser.py',202),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Mparser.py',203),
]
